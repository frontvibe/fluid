/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type ThemeContent = {
  _id: string;
  _type: 'themeContent';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  account?: {
    welcome?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    welcomeToYourAccount?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    accountDetails?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    signOut?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderHistory?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    noOrdersMessage?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    startShopping?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderDetail?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    returnToAccount?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderNumber?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    placedOn?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    product?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    price?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    quantity?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    total?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    subtotal?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    discounts?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    discountsOff?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    tax?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    shippingAddress?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    noShippingAddress?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    status?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    updateYourProfile?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    firstName?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    lastName?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    company?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    addressLine1?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    addressLine2?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    city?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    stateProvince?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    postalCode?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    country?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    phone?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    defaultAddress?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    saving?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    save?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    cancel?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    addName?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    addAddress?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    editAddress?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    addressBook?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    noAddress?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    default?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    edit?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    remove?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    profile?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    name?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    phoneNumber?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    emailAddress?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderId?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderDate?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    fulfillmentStatus?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    viewDetails?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderStatusCancelled?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderStatusError?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderStatusFailure?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderStatusOpen?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderStatusPending?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderStatusSuccess?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
  };
  cart?: {
    heading?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    proceedToCheckout?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    orderSummary?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    subtotal?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    discounts?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    applyDiscount?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    discountCode?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    remove?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    quantity?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    continueShopping?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    emptyMessage?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
  };
  collection?: {
    sortBy?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    sortFeatured?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    sortLowHigh?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    sortHighLow?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    sortBestSelling?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    sortNewest?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    filterAndSort?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    from?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    to?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    filterInStock?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    filterOutOfStock?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    viewAll?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    clearFilters?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    clear?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    apply?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    loading?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    loadPrevious?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    loadMoreProducts?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    noProductFound?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    noCollectionFound?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
  };
  product?: {
    addToCart?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    sale?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    soldOut?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    quantitySelector?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
  };
  error?: {
    pageNotFound?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    serverError?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    sectionError?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    reloadPage?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    missingAddressId?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
    addressCreation?: Array<
      {
        _key: string;
      } & InternationalizedArrayStringValue
    >;
  };
};

export type Settings = {
  _id: string;
  _type: 'settings';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteName?: string;
  siteDescription?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  favicon?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  socialSharingImagePreview?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  spaceBetweenTemplateSections?: number;
  buttonsBorder?: {
    thickness?: number;
    opacity?: number;
    cornerRadius?: number;
  };
  buttonsShadow?: {
    opacity?: number;
    horizontalOffset?: number;
    verticalOffset?: number;
    blur?: number;
  };
  inputsBorder?: {
    thickness?: number;
    opacity?: number;
    cornerRadius?: number;
  };
  inputsShadow?: {
    opacity?: number;
    horizontalOffset?: number;
    verticalOffset?: number;
    blur?: number;
  };
  productCards?: {
    style?: 'standard' | 'card';
    imageAspectRatio?: 'square' | 'video' | 'auto';
    textAlignment?: 'left' | 'center' | 'right';
    border?: {
      thickness?: number;
      opacity?: number;
      cornerRadius?: number;
    };
    shadow?: {
      opacity?: number;
      horizontalOffset?: number;
      verticalOffset?: number;
      blur?: number;
    };
  };
  collectionCards?: {
    style?: 'standard' | 'card';
    imageAspectRatio?: 'square' | 'video' | 'auto';
    textAlignment?: 'left' | 'center' | 'right';
    border?: {
      thickness?: number;
      opacity?: number;
      cornerRadius?: number;
    };
    shadow?: {
      opacity?: number;
      horizontalOffset?: number;
      verticalOffset?: number;
      blur?: number;
    };
  };
  blogCards?: {
    style?: 'standard' | 'card';
    imageAspectRatio?: 'square' | 'video' | 'auto';
    textAlignment?: 'left' | 'center' | 'right';
    border?: {
      thickness?: number;
      opacity?: number;
      cornerRadius?: number;
    };
    shadow?: {
      opacity?: number;
      horizontalOffset?: number;
      verticalOffset?: number;
      blur?: number;
    };
  };
  mediaBorder?: {
    thickness?: number;
    opacity?: number;
    cornerRadius?: number;
  };
  mediaShadow?: {
    opacity?: number;
    horizontalOffset?: number;
    verticalOffset?: number;
    blur?: number;
  };
  dropdownsAndPopupsBorder?: {
    thickness?: number;
    opacity?: number;
    cornerRadius?: number;
  };
  dropdownsAndPopupsShadow?: {
    opacity?: number;
    horizontalOffset?: number;
    verticalOffset?: number;
    blur?: number;
  };
  badgesPosition?: 'bottom_left' | 'bottom_right' | 'top_left' | 'top_right';
  badgesCornerRadius?: number;
  badgesSaleColorScheme?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'colorScheme';
  };
  badgesSoldOutColorScheme?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'colorScheme';
  };
  showCurrencyCodes?: boolean;
  showTrailingZeros?: Array<string>;
  cartCollection?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'collection';
  };
  cartColorScheme?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'colorScheme';
  };
  grid?: {
    horizontalSpace?: number;
    verticalSpace?: number;
  };
  facebook?: string;
  instagram?: string;
  tiktok?: string;
  twitter?: string;
  youtube?: string;
  linkedin?: string;
  snapchat?: string;
  pinterest?: string;
  tumblr?: string;
  vimeo?: string;
};

export type Footer = {
  _id: string;
  _type: 'footer';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sections?: Array<
    | ({
        _key: string;
      } & ImageBannerSection)
    | ({
        _key: string;
      } & FeaturedCollectionSection)
    | ({
        _key: string;
      } & FeaturedProductSection)
    | ({
        _key: string;
      } & CollectionListSection)
    | ({
        _key: string;
      } & CarouselSection)
    | ({
        _key: string;
      } & RichtextSection)
  >;
  footers?: Array<
    {
      _key: string;
    } & SocialLinksOnly
  >;
};

export type Header = {
  _id: string;
  _type: 'header';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  announcementBar?: Array<
    {
      _key: string;
    } & InternationalizedArrayAnnouncementBarValue
  >;
  announcementBarColorScheme?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'colorScheme';
  };
  autoRotateAnnouncements?: boolean;
  menu?: Array<
    {
      _key: string;
    } & InternationalizedArrayHeaderNavigationValue
  >;
  colorScheme?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'colorScheme';
  };
  blur?: boolean;
  sticky?: 'none' | 'onScrollUp' | 'always';
  showSeparatorLine?: boolean;
  padding?: Padding;
  desktopLogoWidth?: number;
};

export type SocialLinksOnly = {
  _type: 'socialLinksOnly';
  copyright?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  settings?: SectionSettings;
};

export type CollectionBannerSection = {
  _type: 'collectionBannerSection';
  showImage?: boolean;
  showDescription?: boolean;
  contentPosition?:
    | 'top_left'
    | 'top_center'
    | 'top_right'
    | 'middle_left'
    | 'middle_center'
    | 'middle_right'
    | 'bottom_left'
    | 'bottom_center'
    | 'bottom_right';
  contentAlignment?: 'left' | 'center' | 'right';
  bannerHeight?: number;
  overlayOpacity?: number;
  settings?: SectionSettings;
};

export type CollectionProductGridSection = {
  _type: 'collectionProductGridSection';
  productsPerPage?: number;
  desktopColumns?: number;
  mobileColumns?: number;
  enableFiltering?: boolean;
  enableSorting?: boolean;
  settings?: SectionSettings;
};

export type RichtextSection = {
  _type: 'richtextSection';
  richtext?: Array<
    {
      _key: string;
    } & InternationalizedArrayRichtextValue
  >;
  desktopContentPosition?: 'left' | 'center' | 'right';
  contentAlignment?: 'left' | 'center' | 'right';
  maxWidth?: number;
  settings?: SectionSettings;
};

export type CarouselSection = {
  _type: 'carouselSection';
  title?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  pagination?: boolean;
  arrows?: boolean;
  autoplay?: boolean;
  loop?: boolean;
  slidesPerViewDesktop?: number;
  slides?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: 'image';
    };
    _type: 'slide';
    _key: string;
  }>;
  settings?: SectionSettings;
};

export type RelatedProductsSection = {
  _type: 'relatedProductsSection';
  heading?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  maxProducts?: number;
  desktopColumns?: number;
  settings?: SectionSettings;
};

export type ProductInformationSection = {
  _type: 'productInformationSection';
  richtext?: Array<
    {
      _key: string;
    } & InternationalizedArrayProductRichtextValue
  >;
  desktopMediaWidth?: 'small' | 'medium' | 'large';
  desktopMediaPosition?: 'left' | 'right';
  mediaAspectRatio?: 'square' | 'video' | 'auto';
  settings?: SectionSettings;
};

export type CollectionListSection = {
  _type: 'collectionListSection';
  collections?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'collection';
  }>;
  desktopColumns?: number;
  settings?: SectionSettings;
};

export type FeaturedProductSection = {
  _type: 'featuredProductSection';
  product?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'product';
  };
  richtext?: Array<
    {
      _key: string;
    } & InternationalizedArrayProductRichtextValue
  >;
  mediaAspectRatio?: 'square' | 'video' | 'auto';
  settings?: SectionSettings;
};

export type FeaturedCollectionSection = {
  _type: 'featuredCollectionSection';
  heading?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  collection?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'collection';
  };
  maxProducts?: number;
  desktopColumns?: number;
  viewAll?: boolean;
  settings?: SectionSettings;
};

export type ImageBannerSection = {
  _type: 'imageBannerSection';
  content?: Array<
    {
      _key: string;
    } & InternationalizedArrayBannerRichtextValue
  >;
  contentPosition?:
    | 'top_left'
    | 'top_center'
    | 'top_right'
    | 'middle_left'
    | 'middle_center'
    | 'middle_right'
    | 'bottom_left'
    | 'bottom_center'
    | 'bottom_right';
  contentAlignment?: 'left' | 'center' | 'right';
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  bannerHeight?: number;
  overlayOpacity?: number;
  settings?: SectionSettings;
};

export type Typography = {
  _id: string;
  _type: 'typography';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: {
    font?: Array<
      {
        _key: string;
      } & FontCategory
    >;
    capitalize?: boolean;
    baseSize?: number;
    letterSpacing?: number;
    lineHeight?: number;
  };
  body?: {
    font?: Array<
      {
        _key: string;
      } & FontCategory
    >;
    baseSize?: number;
    letterSpacing?: number;
    lineHeight?: number;
  };
  extra?: {
    font?: Array<
      {
        _key: string;
      } & FontCategory
    >;
    capitalize?: boolean;
    baseSize?: number;
    letterSpacing?: number;
    lineHeight?: number;
  };
};

export type ProductVariant = {
  _id: string;
  _type: 'productVariant';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  hidden?: string;
  titleProxy?: string;
  store?: ShopifyProductVariant;
};

export type CollectionRule = {
  _type: 'collectionRule';
  column?: string;
  relation?: string;
  condition?: string;
};

export type ShopifyProductVariant = {
  _type: 'shopifyProductVariant';
  createdAt?: string;
  updatedAt?: string;
  status?: 'active' | 'archived' | 'draft';
  isDeleted?: boolean;
  title?: string;
  sku?: string;
  id?: number;
  gid?: string;
  productId?: number;
  productGid?: string;
  price?: number;
  compareAtPrice?: number;
  inventory?: Inventory;
  option1?: string;
  option2?: string;
  option3?: string;
  previewImageUrl?: string;
};

export type ProxyString = string;

export type PriceRange = {
  _type: 'priceRange';
  minVariantPrice?: number;
  maxVariantPrice?: number;
};

export type PlaceholderString = string;

export type Option = {
  _type: 'option';
  name?: string;
  values?: Array<string>;
};

export type Inventory = {
  _type: 'inventory';
  isAvailable?: boolean;
  management?: string;
  policy?: string;
};

export type RangeSlider = number;

export type AnnouncementBar = Array<{
  text?: string;
  link?:
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'home';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'page';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'product';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'collection';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'blogPost';
      };
  externalLink?: string;
  openInNewTab?: boolean;
  _type: 'announcement';
  _key: string;
}>;

export type Button = {
  _type: 'button';
  label?: string;
  link?:
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'home';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'page';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'product';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'collection';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'blogPost';
      };
  anchor?: string;
};

export type HeaderNavigation = Array<
  | ({
      _key: string;
    } & InternalLink)
  | ({
      _key: string;
    } & ExternalLink)
  | ({
      _key: string;
    } & NestedNavigation)
>;

export type Anchor = string;

export type SectionSettings = {
  _type: 'sectionSettings';
  hide?: boolean;
  colorScheme?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'colorScheme';
  };
  padding?: Padding;
  customCss?: Code;
};

export type ColorScheme = {
  _id: string;
  _type: 'colorScheme';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  default?: boolean;
  background?: ColorPicker;
  foreground?: ColorPicker;
  primary?: ColorPicker;
  primaryForeground?: ColorPicker;
  border?: ColorPicker;
  card?: ColorPicker;
  cardForeground?: ColorPicker;
};

export type ColorPicker = {
  _type: 'colorPicker';
  hex?: string;
  hsl?: {
    h?: number;
    s?: number;
    l?: number;
  };
  rgb?: {
    r?: number;
    g?: number;
    b?: number;
  };
};

export type FontCategory = {
  _type: 'fontCategory';
  fontName?: string;
  fontType?: 'serif' | 'sans-serif';
  antialiased?: boolean;
  fontAssets?: Array<
    {
      _key: string;
    } & FontAsset
  >;
};

export type FontAsset = {
  _type: 'fontAsset';
  woff2?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
    };
    media?: unknown;
    _type: 'file';
  };
  woff?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
    };
    media?: unknown;
    _type: 'file';
  };
  ttf?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
    };
    media?: unknown;
    _type: 'file';
  };
  fontStyle?: 'normal' | 'italic';
  fontWeight?: 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type BannerRichtext = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
      listItem?: never;
      markDefs?: null;
      level?: number;
      _type: 'block';
      _key: string;
    }
  | ({
      _key: string;
    } & Button)
>;

export type ProductRichtext = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<
        | {
            link?:
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'home';
                }
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'page';
                }
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'product';
                }
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'collection';
                }
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'blogPost';
                };
            anchor?: Anchor;
            _type: 'internalLink';
            _key: string;
          }
        | {
            link?: string;
            openInNewTab?: boolean;
            _type: 'externalLink';
            _key: string;
          }
      >;
      level?: number;
      _type: 'block';
      _key: string;
    }
  | {
      titleProxy?: ProxyString;
      _type: 'shopifyTitle';
      _key: string;
    }
  | {
      descriptionProxy?: ProxyString;
      _type: 'shopifyDescription';
      _key: string;
    }
  | {
      priceProxy?: ProxyString;
      _type: 'price';
      _key: string;
    }
  | {
      quantitySelector?: boolean;
      shopPayButton?: boolean;
      _type: 'addToCartButton';
      _key: string;
    }
>;

export type CollectionSections = Array<
  | ({
      _key: string;
    } & CollectionBannerSection)
  | ({
      _key: string;
    } & CollectionProductGridSection)
  | ({
      _key: string;
    } & ImageBannerSection)
  | ({
      _key: string;
    } & FeaturedCollectionSection)
  | ({
      _key: string;
    } & FeaturedProductSection)
  | ({
      _key: string;
    } & CollectionListSection)
  | ({
      _key: string;
    } & CarouselSection)
  | ({
      _key: string;
    } & RichtextSection)
>;

export type ProductSections = Array<
  | ({
      _key: string;
    } & ProductInformationSection)
  | ({
      _key: string;
    } & RelatedProductsSection)
  | ({
      _key: string;
    } & ImageBannerSection)
  | ({
      _key: string;
    } & FeaturedCollectionSection)
  | ({
      _key: string;
    } & FeaturedProductSection)
  | ({
      _key: string;
    } & CollectionListSection)
  | ({
      _key: string;
    } & CarouselSection)
  | ({
      _key: string;
    } & RichtextSection)
>;

export type Sections = Array<
  | ({
      _key: string;
    } & ImageBannerSection)
  | ({
      _key: string;
    } & FeaturedCollectionSection)
  | ({
      _key: string;
    } & FeaturedProductSection)
  | ({
      _key: string;
    } & CollectionListSection)
  | ({
      _key: string;
    } & CarouselSection)
  | ({
      _key: string;
    } & RichtextSection)
>;

export type Footers = Array<
  {
    _key: string;
  } & SocialLinksOnly
>;

export type NestedNavigation = {
  _type: 'nestedNavigation';
  name?: string;
  link?:
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'home';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'page';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'product';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'collection';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'blogPost';
      };
  childLinks?: Array<
    | ({
        _key: string;
      } & InternalLink)
    | ({
        _key: string;
      } & ExternalLink)
  >;
};

export type ExternalLink = {
  _type: 'externalLink';
  name?: string;
  link?: string;
  openInNewTab?: boolean;
};

export type InternalLink = {
  _type: 'internalLink';
  name?: string;
  link?:
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'home';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'page';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'product';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'collection';
      }
    | {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'blogPost';
      };
  anchor?: Anchor;
};

export type AspectRatios = 'square' | 'video' | 'auto';

export type Richtext = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<
        | {
            link?:
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'home';
                }
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'page';
                }
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'product';
                }
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'collection';
                }
              | {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'blogPost';
                };
            anchor?: Anchor;
            _type: 'internalLink';
            _key: string;
          }
        | {
            link?: string;
            openInNewTab?: boolean;
            _type: 'externalLink';
            _key: string;
          }
      >;
      level?: number;
      _type: 'block';
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      maxWidth?: RangeSlider;
      alignment?: 'left' | 'center' | 'right';
      _type: 'image';
      _key: string;
    }
  | ({
      _key: string;
    } & Button)
>;

export type ContentAlignment = 'left' | 'center' | 'right';

export type ContentPosition =
  | 'top_left'
  | 'top_center'
  | 'top_right'
  | 'middle_left'
  | 'middle_center'
  | 'middle_right'
  | 'bottom_left'
  | 'bottom_center'
  | 'bottom_right';

export type Padding = {
  _type: 'padding';
  top?: RangeSlider;
  bottom?: RangeSlider;
};

export type Link =
  | {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'home';
    }
  | {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'page';
    }
  | {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'product';
    }
  | {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'collection';
    }
  | {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'blogPost';
    };

export type InternationalizedArrayBannerRichtextValue = {
  _type: 'internationalizedArrayBannerRichtextValue';
  value?: BannerRichtext;
};

export type InternationalizedArrayRichtextValue = {
  _type: 'internationalizedArrayRichtextValue';
  value?: Richtext;
};

export type InternationalizedArrayProductRichtextValue = {
  _type: 'internationalizedArrayProductRichtextValue';
  value?: ProductRichtext;
};

export type InternationalizedArrayAnnouncementBarValue = {
  _type: 'internationalizedArrayAnnouncementBarValue';
  value?: AnnouncementBar;
};

export type InternationalizedArrayHeaderNavigationValue = {
  _type: 'internationalizedArrayHeaderNavigationValue';
  value?: HeaderNavigation;
};

export type InternationalizedArraySlugValue = {
  _type: 'internationalizedArraySlugValue';
  value?: Slug;
};

export type InternationalizedArrayTextValue = {
  _type: 'internationalizedArrayTextValue';
  value?: string;
};

export type InternationalizedArrayStringValue = {
  _type: 'internationalizedArrayStringValue';
  value?: string;
};

export type InternationalizedArrayBannerRichtext = Array<
  {
    _key: string;
  } & InternationalizedArrayBannerRichtextValue
>;

export type InternationalizedArrayRichtext = Array<
  {
    _key: string;
  } & InternationalizedArrayRichtextValue
>;

export type InternationalizedArrayProductRichtext = Array<
  {
    _key: string;
  } & InternationalizedArrayProductRichtextValue
>;

export type InternationalizedArrayAnnouncementBar = Array<
  {
    _key: string;
  } & InternationalizedArrayAnnouncementBarValue
>;

export type Home = {
  _id: string;
  _type: 'home';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sections?: Sections;
  seo?: Seo;
};

export type Page = {
  _id: string;
  _type: 'page';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  sections?: Sections;
  seo?: Seo;
  slug?: Slug;
};

export type Product = {
  _id: string;
  _type: 'product';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  hidden?: string;
  template?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'productTemplate';
  };
  titleProxy?: ProxyString;
  slugProxy?: ProxyString;
  store?: ShopifyProduct;
};

export type ShopifyProduct = {
  _type: 'shopifyProduct';
  createdAt?: string;
  updatedAt?: string;
  status?: 'active' | 'archived' | 'draft';
  isDeleted?: boolean;
  title?: string;
  id?: number;
  gid?: string;
  slug?: Slug;
  descriptionHtml?: string;
  productType?: string;
  vendor?: string;
  tags?: string;
  priceRange?: PriceRange;
  previewImageUrl?: string;
  options?: Array<
    {
      _key: string;
    } & Option
  >;
  variants?: Array<{
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: 'productVariant';
  }>;
};

export type ProductTemplate = {
  _id: string;
  _type: 'productTemplate';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  default?: boolean;
  sections?: ProductSections;
};

export type Collection = {
  _id: string;
  _type: 'collection';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  hidden?: string;
  titleProxy?: ProxyString;
  slugProxy?: ProxyString;
  template?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'collectionTemplate';
  };
  store?: ShopifyCollection;
};

export type ShopifyCollection = {
  _type: 'shopifyCollection';
  createdAt?: string;
  updatedAt?: string;
  isDeleted?: boolean;
  title?: string;
  id?: number;
  gid?: string;
  slug?: Slug;
  descriptionHtml?: string;
  imageUrl?: string;
  rules?: Array<
    {
      _key: string;
    } & CollectionRule
  >;
  disjunctive?: boolean;
  sortOrder?: string;
};

export type CollectionTemplate = {
  _id: string;
  _type: 'collectionTemplate';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  default?: boolean;
  sections?: CollectionSections;
};

export type BlogPost = {
  _id: string;
  _type: 'blogPost';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  seo?: Seo;
  slug?: Array<
    {
      _key: string;
    } & InternationalizedArraySlugValue
  >;
};

export type Seo = {
  _type: 'seo';
  title?: Array<
    {
      _key: string;
    } & InternationalizedArrayStringValue
  >;
  description?: Array<
    {
      _key: string;
    } & InternationalizedArrayTextValue
  >;
  image?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type InternationalizedArrayHeaderNavigation = Array<
  {
    _key: string;
  } & InternationalizedArrayHeaderNavigationValue
>;

export type InternationalizedArraySlug = Array<
  {
    _key: string;
  } & InternationalizedArraySlugValue
>;

export type InternationalizedArrayText = Array<
  {
    _key: string;
  } & InternationalizedArrayTextValue
>;

export type InternationalizedArrayString = Array<
  {
    _key: string;
  } & InternationalizedArrayStringValue
>;

export type MediaTag = {
  _id: string;
  _type: 'media.tag';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};

export type Code = {
  _type: 'code';
  language?: string;
  filename?: string;
  code?: string;
  highlightedLines?: Array<number>;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | ThemeContent
  | Settings
  | Footer
  | Header
  | SocialLinksOnly
  | CollectionBannerSection
  | CollectionProductGridSection
  | RichtextSection
  | CarouselSection
  | RelatedProductsSection
  | ProductInformationSection
  | CollectionListSection
  | FeaturedProductSection
  | FeaturedCollectionSection
  | ImageBannerSection
  | Typography
  | ProductVariant
  | CollectionRule
  | ShopifyProductVariant
  | ProxyString
  | PriceRange
  | PlaceholderString
  | Option
  | Inventory
  | RangeSlider
  | AnnouncementBar
  | Button
  | HeaderNavigation
  | Anchor
  | SectionSettings
  | ColorScheme
  | ColorPicker
  | FontCategory
  | FontAsset
  | SanityFileAsset
  | BannerRichtext
  | ProductRichtext
  | CollectionSections
  | ProductSections
  | Sections
  | Footers
  | NestedNavigation
  | ExternalLink
  | InternalLink
  | AspectRatios
  | Richtext
  | ContentAlignment
  | ContentPosition
  | Padding
  | Link
  | InternationalizedArrayBannerRichtextValue
  | InternationalizedArrayRichtextValue
  | InternationalizedArrayProductRichtextValue
  | InternationalizedArrayAnnouncementBarValue
  | InternationalizedArrayHeaderNavigationValue
  | InternationalizedArraySlugValue
  | InternationalizedArrayTextValue
  | InternationalizedArrayStringValue
  | InternationalizedArrayBannerRichtext
  | InternationalizedArrayRichtext
  | InternationalizedArrayProductRichtext
  | InternationalizedArrayAnnouncementBar
  | Home
  | Page
  | Product
  | ShopifyProduct
  | ProductTemplate
  | Collection
  | ShopifyCollection
  | CollectionTemplate
  | BlogPost
  | Seo
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | InternationalizedArrayHeaderNavigation
  | InternationalizedArraySlug
  | InternationalizedArrayText
  | InternationalizedArrayString
  | MediaTag
  | Slug
  | Code;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./app/data/sanity/footers.ts
// Variable: FOOTER_SOCIAL_LINKS_ONLY_FRAGMENT
// Query: {  _key,  _type,  "copyright": coalesce(    copyright[_key == $language][0].value,    copyright[_key == $defaultLanguage][0].value,  ),  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},}
export type FOOTER_SOCIAL_LINKS_ONLY_FRAGMENTResult = {
  _key: never;
  _type: never;
  copyright: null;
  settings: never;
};

// Source: ./app/data/sanity/fragments.ts
// Variable: IMAGE_FRAGMENT
// Query: {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,}
export type IMAGE_FRAGMENTResult = {
  _type: never;
  asset: never;
  altText: never;
  _ref: never;
  hotspot: never;
  crop: never;
};
// Variable: COLOR_FRAGMENT
// Query: {  alpha,  hex,  hsl,  rgb,}
export type COLOR_FRAGMENTResult = {
  alpha: never;
  hex: never;
  hsl: never;
  rgb: never;
};
// Variable: COLOR_SCHEME_FRAGMENT
// Query: {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},}
export type COLOR_SCHEME_FRAGMENTResult = {
  background: never;
  border: never;
  card: never;
  cardForeground: never;
  foreground: never;
  primary: never;
  primaryForeground: never;
};
// Variable: THEME_CONTENT_FRAGMENT
// Query: {  account {    "accountDetails": coalesce(    accountDetails[_key == $language][0].value,    accountDetails[_key == $defaultLanguage][0].value,  ),    "addAddress": coalesce(    addAddress[_key == $language][0].value,    addAddress[_key == $defaultLanguage][0].value,  ),    "addName": coalesce(    addName[_key == $language][0].value,    addName[_key == $defaultLanguage][0].value,  ),    "addressBook": coalesce(    addressBook[_key == $language][0].value,    addressBook[_key == $defaultLanguage][0].value,  ),    "addressLine1": coalesce(    addressLine1[_key == $language][0].value,    addressLine1[_key == $defaultLanguage][0].value,  ),    "addressLine2": coalesce(    addressLine2[_key == $language][0].value,    addressLine2[_key == $defaultLanguage][0].value,  ),    "cancel": coalesce(    cancel[_key == $language][0].value,    cancel[_key == $defaultLanguage][0].value,  ),    "city": coalesce(    city[_key == $language][0].value,    city[_key == $defaultLanguage][0].value,  ),     "company": coalesce(    company[_key == $language][0].value,    company[_key == $defaultLanguage][0].value,  ),    "country": coalesce(    country[_key == $language][0].value,    country[_key == $defaultLanguage][0].value,  ),    "default": coalesce(    default[_key == $language][0].value,    default[_key == $defaultLanguage][0].value,  ),    "defaultAddress": coalesce(    defaultAddress[_key == $language][0].value,    defaultAddress[_key == $defaultLanguage][0].value,  ),    "discounts": coalesce(    discounts[_key == $language][0].value,    discounts[_key == $defaultLanguage][0].value,  ),    "discountsOff": coalesce(    discountsOff[_key == $language][0].value,    discountsOff[_key == $defaultLanguage][0].value,  ),    "edit": coalesce(    edit[_key == $language][0].value,    edit[_key == $defaultLanguage][0].value,  ),    "editAddress": coalesce(    editAddress[_key == $language][0].value,    editAddress[_key == $defaultLanguage][0].value,  ),    "emailAddress": coalesce(    emailAddress[_key == $language][0].value,    emailAddress[_key == $defaultLanguage][0].value,  ),    "firstName": coalesce(    firstName[_key == $language][0].value,    firstName[_key == $defaultLanguage][0].value,  ),    "fulfillmentStatus": coalesce(    fulfillmentStatus[_key == $language][0].value,    fulfillmentStatus[_key == $defaultLanguage][0].value,  ),    "lastName": coalesce(    lastName[_key == $language][0].value,    lastName[_key == $defaultLanguage][0].value,  ),    "name": coalesce(    name[_key == $language][0].value,    name[_key == $defaultLanguage][0].value,  ),    "noAddress": coalesce(    noAddress[_key == $language][0].value,    noAddress[_key == $defaultLanguage][0].value,  ),    "noOrdersMessage": coalesce(    noOrdersMessage[_key == $language][0].value,    noOrdersMessage[_key == $defaultLanguage][0].value,  ),    "noShippingAddress": coalesce(    noShippingAddress[_key == $language][0].value,    noShippingAddress[_key == $defaultLanguage][0].value,  ),    "orderDate": coalesce(    orderDate[_key == $language][0].value,    orderDate[_key == $defaultLanguage][0].value,  ),    "orderDetail": coalesce(    orderDetail[_key == $language][0].value,    orderDetail[_key == $defaultLanguage][0].value,  ),    "orderHistory": coalesce(    orderHistory[_key == $language][0].value,    orderHistory[_key == $defaultLanguage][0].value,  ),    "orderId": coalesce(    orderId[_key == $language][0].value,    orderId[_key == $defaultLanguage][0].value,  ),    "orderNumber": coalesce(    orderNumber[_key == $language][0].value,    orderNumber[_key == $defaultLanguage][0].value,  ),    "orderStatusCancelled": coalesce(    orderStatusCancelled[_key == $language][0].value,    orderStatusCancelled[_key == $defaultLanguage][0].value,  ),    "orderStatusError": coalesce(    orderStatusError[_key == $language][0].value,    orderStatusError[_key == $defaultLanguage][0].value,  ),    "orderStatusFailure": coalesce(    orderStatusFailure[_key == $language][0].value,    orderStatusFailure[_key == $defaultLanguage][0].value,  ),    "orderStatusOpen": coalesce(    orderStatusOpen[_key == $language][0].value,    orderStatusOpen[_key == $defaultLanguage][0].value,  ),    "orderStatusPending": coalesce(    orderStatusPending[_key == $language][0].value,    orderStatusPending[_key == $defaultLanguage][0].value,  ),    "orderStatusSuccess": coalesce(    orderStatusSuccess[_key == $language][0].value,    orderStatusSuccess[_key == $defaultLanguage][0].value,  ),    "phone": coalesce(    phone[_key == $language][0].value,    phone[_key == $defaultLanguage][0].value,  ),    "phoneNumber": coalesce(    phoneNumber[_key == $language][0].value,    phoneNumber[_key == $defaultLanguage][0].value,  ),    "placedOn": coalesce(    placedOn[_key == $language][0].value,    placedOn[_key == $defaultLanguage][0].value,  ),    "postalCode": coalesce(    postalCode[_key == $language][0].value,    postalCode[_key == $defaultLanguage][0].value,  ),    "price": coalesce(    price[_key == $language][0].value,    price[_key == $defaultLanguage][0].value,  ),    "product": coalesce(    product[_key == $language][0].value,    product[_key == $defaultLanguage][0].value,  ),    "profile": coalesce(    profile[_key == $language][0].value,    profile[_key == $defaultLanguage][0].value,  ),    "quantity": coalesce(    quantity[_key == $language][0].value,    quantity[_key == $defaultLanguage][0].value,  ),    "remove": coalesce(    remove[_key == $language][0].value,    remove[_key == $defaultLanguage][0].value,  ),    "returnToAccount": coalesce(    returnToAccount[_key == $language][0].value,    returnToAccount[_key == $defaultLanguage][0].value,  ),    "save": coalesce(    save[_key == $language][0].value,    save[_key == $defaultLanguage][0].value,  ),    "saving": coalesce(    saving[_key == $language][0].value,    saving[_key == $defaultLanguage][0].value,  ),    "shippingAddress": coalesce(    shippingAddress[_key == $language][0].value,    shippingAddress[_key == $defaultLanguage][0].value,  ),    "signOut": coalesce(    signOut[_key == $language][0].value,    signOut[_key == $defaultLanguage][0].value,  ),    "startShopping": coalesce(    startShopping[_key == $language][0].value,    startShopping[_key == $defaultLanguage][0].value,  ),    "stateProvince": coalesce(    stateProvince[_key == $language][0].value,    stateProvince[_key == $defaultLanguage][0].value,  ),    "status": coalesce(    status[_key == $language][0].value,    status[_key == $defaultLanguage][0].value,  ),    "subtotal": coalesce(    subtotal[_key == $language][0].value,    subtotal[_key == $defaultLanguage][0].value,  ),    "tax": coalesce(    tax[_key == $language][0].value,    tax[_key == $defaultLanguage][0].value,  ),    "total": coalesce(    total[_key == $language][0].value,    total[_key == $defaultLanguage][0].value,  ),    "updateYourProfile": coalesce(    updateYourProfile[_key == $language][0].value,    updateYourProfile[_key == $defaultLanguage][0].value,  ),    "viewDetails": coalesce(    viewDetails[_key == $language][0].value,    viewDetails[_key == $defaultLanguage][0].value,  ),    "welcome": coalesce(    welcome[_key == $language][0].value,    welcome[_key == $defaultLanguage][0].value,  ),    "welcomeToYourAccount": coalesce(    welcomeToYourAccount[_key == $language][0].value,    welcomeToYourAccount[_key == $defaultLanguage][0].value,  ),  },  cart {    "applyDiscount": coalesce(    applyDiscount[_key == $language][0].value,    applyDiscount[_key == $defaultLanguage][0].value,  ),    "continueShopping": coalesce(    continueShopping[_key == $language][0].value,    continueShopping[_key == $defaultLanguage][0].value,  ),    "discountCode": coalesce(    discountCode[_key == $language][0].value,    discountCode[_key == $defaultLanguage][0].value,  ),    "discounts": coalesce(    discounts[_key == $language][0].value,    discounts[_key == $defaultLanguage][0].value,  ),    "emptyMessage": coalesce(    emptyMessage[_key == $language][0].value,    emptyMessage[_key == $defaultLanguage][0].value,  ),    "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),    "orderSummary": coalesce(    orderSummary[_key == $language][0].value,    orderSummary[_key == $defaultLanguage][0].value,  ),    "proceedToCheckout": coalesce(    proceedToCheckout[_key == $language][0].value,    proceedToCheckout[_key == $defaultLanguage][0].value,  ),    "quantity": coalesce(    quantity[_key == $language][0].value,    quantity[_key == $defaultLanguage][0].value,  ),    "remove": coalesce(    remove[_key == $language][0].value,    remove[_key == $defaultLanguage][0].value,  ),    "subtotal": coalesce(    subtotal[_key == $language][0].value,    subtotal[_key == $defaultLanguage][0].value,  ),  },  collection {    "apply": coalesce(    apply[_key == $language][0].value,    apply[_key == $defaultLanguage][0].value,  ),    "clear": coalesce(    clear[_key == $language][0].value,    clear[_key == $defaultLanguage][0].value,  ),    "clearFilters": coalesce(    clearFilters[_key == $language][0].value,    clearFilters[_key == $defaultLanguage][0].value,  ),    "filterAndSort": coalesce(    filterAndSort[_key == $language][0].value,    filterAndSort[_key == $defaultLanguage][0].value,  ),    "filterInStock": coalesce(    filterInStock[_key == $language][0].value,    filterInStock[_key == $defaultLanguage][0].value,  ),    "filterOutOfStock": coalesce(    filterOutOfStock[_key == $language][0].value,    filterOutOfStock[_key == $defaultLanguage][0].value,  ),    "from": coalesce(    from[_key == $language][0].value,    from[_key == $defaultLanguage][0].value,  ),    "loading": coalesce(    loading[_key == $language][0].value,    loading[_key == $defaultLanguage][0].value,  ),    "loadMoreProducts": coalesce(    loadMoreProducts[_key == $language][0].value,    loadMoreProducts[_key == $defaultLanguage][0].value,  ),    "loadPrevious": coalesce(    loadPrevious[_key == $language][0].value,    loadPrevious[_key == $defaultLanguage][0].value,  ),    "noCollectionFound": coalesce(    noCollectionFound[_key == $language][0].value,    noCollectionFound[_key == $defaultLanguage][0].value,  ),    "noProductFound": coalesce(    noProductFound[_key == $language][0].value,    noProductFound[_key == $defaultLanguage][0].value,  ),    "sortBestSelling": coalesce(    sortBestSelling[_key == $language][0].value,    sortBestSelling[_key == $defaultLanguage][0].value,  ),    "sortBy": coalesce(    sortBy[_key == $language][0].value,    sortBy[_key == $defaultLanguage][0].value,  ),    "sortFeatured": coalesce(    sortFeatured[_key == $language][0].value,    sortFeatured[_key == $defaultLanguage][0].value,  ),    "sortHighLow": coalesce(    sortHighLow[_key == $language][0].value,    sortHighLow[_key == $defaultLanguage][0].value,  ),    "sortLowHigh": coalesce(    sortLowHigh[_key == $language][0].value,    sortLowHigh[_key == $defaultLanguage][0].value,  ),    "sortNewest": coalesce(    sortNewest[_key == $language][0].value,    sortNewest[_key == $defaultLanguage][0].value,  ),    "to": coalesce(    to[_key == $language][0].value,    to[_key == $defaultLanguage][0].value,  ),     "viewAll": coalesce(    viewAll[_key == $language][0].value,    viewAll[_key == $defaultLanguage][0].value,  ),  },  error {    "addressCreation": coalesce(    addressCreation[_key == $language][0].value,    addressCreation[_key == $defaultLanguage][0].value,  ),    "missingAddressId": coalesce(    missingAddressId[_key == $language][0].value,    missingAddressId[_key == $defaultLanguage][0].value,  ),    "pageNotFound": coalesce(    pageNotFound[_key == $language][0].value,    pageNotFound[_key == $defaultLanguage][0].value,  ),    "reloadPage": coalesce(    reloadPage[_key == $language][0].value,    reloadPage[_key == $defaultLanguage][0].value,  ),    "sectionError": coalesce(    sectionError[_key == $language][0].value,    sectionError[_key == $defaultLanguage][0].value,  ),    "serverError": coalesce(    serverError[_key == $language][0].value,    serverError[_key == $defaultLanguage][0].value,  ),  },  product {    "addToCart": coalesce(    addToCart[_key == $language][0].value,    addToCart[_key == $defaultLanguage][0].value,  ),    "quantitySelector": coalesce(    quantitySelector[_key == $language][0].value,    quantitySelector[_key == $defaultLanguage][0].value,  ),    "sale": coalesce(    sale[_key == $language][0].value,    sale[_key == $defaultLanguage][0].value,  ),    "soldOut": coalesce(    soldOut[_key == $language][0].value,    soldOut[_key == $defaultLanguage][0].value,  ),  },}
export type THEME_CONTENT_FRAGMENTResult = {
  account: never;
  cart: never;
  collection: never;
  error: never;
  product: never;
};
// Variable: SETTINGS_FRAGMENT
// Query: {  badgesCornerRadius,  badgesPosition,  badgesSaleColorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  badgesSoldOutColorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  blogCards,  buttonsBorder,  buttonsShadow,  cartCollection -> {    store {      gid,      title,    },  },  cartColorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  collectionCards,  description,  dropdownsAndPopupsBorder,  dropdownsAndPopupsShadow,  facebook,  favicon {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  grid,  inputsBorder,  inputsShadow,  instagram,  linkedin,  logo {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  mediaBorder,  mediaShadow,  pinterest,  productCards,  showCurrencyCodes,  showTrailingZeros,  siteName,  snapchat,  socialSharingImagePreview {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  spaceBetweenTemplateSections,  tiktok,  tumblr,  twitter,  vimeo,  youtube,}
export type SETTINGS_FRAGMENTResult = {
  badgesCornerRadius: never;
  badgesPosition: never;
  badgesSaleColorScheme: never;
  badgesSoldOutColorScheme: never;
  blogCards: never;
  buttonsBorder: never;
  buttonsShadow: never;
  cartCollection: never;
  cartColorScheme: never;
  collectionCards: never;
  description: never;
  dropdownsAndPopupsBorder: never;
  dropdownsAndPopupsShadow: never;
  facebook: never;
  favicon: never;
  grid: never;
  inputsBorder: never;
  inputsShadow: never;
  instagram: never;
  linkedin: never;
  logo: never;
  mediaBorder: never;
  mediaShadow: never;
  pinterest: never;
  productCards: never;
  showCurrencyCodes: never;
  showTrailingZeros: never;
  siteName: never;
  snapchat: never;
  socialSharingImagePreview: never;
  spaceBetweenTemplateSections: never;
  tiktok: never;
  tumblr: never;
  twitter: never;
  vimeo: never;
  youtube: never;
};
// Variable: HEADER_FRAGMENT
// Query: {  "announcementBar": coalesce(    announcementBar[_key == $language][0].value[],    announcementBar[_key == $defaultLanguage][0].value[],  )[] {    _type == "announcement" => {      _key,      externalLink,      link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},      openInNewTab,      text,    },  },  announcementBarColorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  autoRotateAnnouncements,  blur,  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  desktopLogoWidth,  "menu": coalesce(    menu[_key == $language][0].value[],    menu[_key == $defaultLanguage][0].value[],  )[] {  _type == "externalLink" => {  _key,  _type,  link,  name,  openInNewTab,},  _type == "internalLink" => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},  _type == "nestedNavigation" => {  _key,  _type,  childLinks[] {    _type == "externalLink" => {  _key,  _type,  link,  name,  openInNewTab,},    _type == "internalLink" => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},  },  link -> {    'documentType': _type,    'slug': coalesce(      slug,      store.slug    ) {      _type,      current    },  },  name,},},  padding,  showSeparatorLine,  sticky }
export type HEADER_FRAGMENTResult = {
  announcementBar: null;
  announcementBarColorScheme: never;
  autoRotateAnnouncements: never;
  blur: never;
  colorScheme: never;
  desktopLogoWidth: never;
  menu: null;
  padding: never;
  showSeparatorLine: never;
  sticky: never;
};
// Variable: FONT_ASSET_FRAGMENT
// Query: {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,}
export type FONT_ASSET_FRAGMENTResult = {
  extension: never;
  mimeType: never;
  url: never;
};
// Variable: FONT_FRAGMENT
// Query: {  baseSize,  capitalize,  font[] {    antialiased,    fontAssets[] {      "fontName": ^.fontName,      fontStyle,      fontWeight,      ttf {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},      woff {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},      woff2 {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},    },    fontName,    fontType,  },  letterSpacing,  lineHeight,}
export type FONT_FRAGMENTResult = {
  baseSize: never;
  capitalize: never;
  font: never;
  letterSpacing: never;
  lineHeight: never;
};
// Variable: RICHTEXT_FRAGMENT
// Query: {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }}
export type RICHTEXT_FRAGMENTResult = never;

// Source: ./app/data/sanity/links.ts
// Variable: LINK_REFERENCE_FRAGMENT
// Query: {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },}
export type LINK_REFERENCE_FRAGMENTResult = {
  documentType: never;
  slug: null;
};
// Variable: INTERNAL_LINK_FRAGMENT
// Query: {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,}
export type INTERNAL_LINK_FRAGMENTResult = {
  _key: never;
  _type: never;
  anchor: never;
  link: never;
  name: never;
};
// Variable: EXTERNAL_LINK_FRAGMENT
// Query: {  _key,  _type,  link,  name,  openInNewTab,}
export type EXTERNAL_LINK_FRAGMENTResult = {
  _key: never;
  _type: never;
  link: never;
  name: never;
  openInNewTab: never;
};
// Variable: NESTED_NAVIGATION_FRAGMENT
// Query: {  _key,  _type,  childLinks[] {    _type == "externalLink" => {  _key,  _type,  link,  name,  openInNewTab,},    _type == "internalLink" => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},  },  link -> {    'documentType': _type,    'slug': coalesce(      slug,      store.slug    ) {      _type,      current    },  },  name,}
export type NESTED_NAVIGATION_FRAGMENTResult = {
  _key: never;
  _type: never;
  childLinks: never;
  link: never;
  name: never;
};
// Variable: LINKS_LIST_SELECTION
// Query: {  _type == "externalLink" => {  _key,  _type,  link,  name,  openInNewTab,},  _type == "internalLink" => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},  _type == "nestedNavigation" => {  _key,  _type,  childLinks[] {    _type == "externalLink" => {  _key,  _type,  link,  name,  openInNewTab,},    _type == "internalLink" => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},  },  link -> {    'documentType': _type,    'slug': coalesce(      slug,      store.slug    ) {      _type,      current    },  },  name,},}
export type LINKS_LIST_SELECTIONResult = {};

// Source: ./app/data/sanity/queries.ts
// Variable: DEFAULT_PRODUCT_TEMPLATE
// Query: *[_type == 'productTemplate' && default == true][0] {    _type,    name,    sections[] {      _key,      _type,          _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},            _type == 'productInformationSection' => {  _key,  _type,  desktopMediaPosition,  desktopMediaWidth,  mediaAspectRatio,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'relatedProductsSection' => {  _key,  _type,  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},      },  }
export type DEFAULT_PRODUCT_TEMPLATEResult = {
  _type: 'productTemplate';
  name: string | null;
  sections: Array<
    | {
        _key: string;
        _type: 'carouselSection';
        arrows: boolean | null;
        autoplay: boolean | null;
        title: string | null;
        loop: boolean | null;
        pagination: boolean | null;
        slides: Array<{
          _key: string;
          image: {
            _type: 'image';
            asset: {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
            } | null;
            altText: string | null;
            _ref: string | null;
            hotspot: SanityImageHotspot | null;
            crop: SanityImageCrop | null;
          } | null;
        }> | null;
        slidesPerViewDesktop: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'collectionListSection';
        collections: Array<{
          store: {
            gid: string | null;
          } | null;
        }> | null;
        desktopColumns: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'featuredCollectionSection';
        collection: {
          store: {
            gid: string | null;
            slug: Slug | null;
            title: string | null;
          } | null;
        } | null;
        desktopColumns: number | null;
        heading: string | null;
        maxProducts: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
        viewAll: boolean | null;
      }
    | {
        _key: string;
        _type: 'featuredProductSection';
        mediaAspectRatio: 'auto' | 'square' | 'video' | null;
        product: {
          store: {
            descriptionHtml: string | null;
            firstVariant: {
              store: {
                gid: string | null;
                previewImageUrl: string | null;
                price: number | null;
              } | null;
            } | null;
            gid: string | null;
            options: Array<{
              name: string | null;
              values: Array<string> | null;
            }> | null;
            previewImageUrl: string | null;
            title: string | null;
          } | null;
        } | null;
        richtext: Array<
          | {
              quantitySelector?: boolean;
              shopPayButton?: boolean;
              _type: 'addToCartButton';
              _key: string;
            }
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: 'span';
                _key: string;
              }>;
              style?:
                | 'blockquote'
                | 'h1'
                | 'h2'
                | 'h3'
                | 'h4'
                | 'h5'
                | 'h6'
                | 'normal';
              listItem?: 'bullet' | 'number';
              markDefs: Array<
                | {
                    link: string | null;
                    openInNewTab: boolean | null;
                    _type: 'externalLink';
                    _key: string;
                    name: null;
                  }
                | {
                    link:
                      | {
                          documentType: 'blogPost';
                          slug: null;
                        }
                      | {
                          documentType: 'collection';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'home';
                          slug: null;
                        }
                      | {
                          documentType: 'page';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'product';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | null;
                    anchor: Anchor | null;
                    _type: 'internalLink';
                    _key: string;
                    name: null;
                  }
              > | null;
              level?: number;
              _type: 'block';
              _key: string;
            }
          | {
              priceProxy?: ProxyString;
              _type: 'price';
              _key: string;
            }
          | {
              descriptionProxy?: ProxyString;
              _type: 'shopifyDescription';
              _key: string;
            }
          | {
              titleProxy?: ProxyString;
              _type: 'shopifyTitle';
              _key: string;
            }
        > | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'imageBannerSection';
        backgroundImage: {
          _type: 'image';
          asset: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
          } | null;
          altText: string | null;
          _ref: string | null;
          hotspot: SanityImageHotspot | null;
          crop: SanityImageCrop | null;
        } | null;
        bannerHeight: number | null;
        content: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: 'span';
                _key: string;
              }>;
              style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
              listItem?: never;
              markDefs: null;
              level?: number;
              _type: 'block';
              _key: string;
            }
          | {
              _key: string;
              _type: 'button';
              label?: string;
              link:
                | {
                    documentType: 'blogPost';
                    slug: null;
                  }
                | {
                    documentType: 'collection';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | {
                    documentType: 'home';
                    slug: null;
                  }
                | {
                    documentType: 'page';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | {
                    documentType: 'product';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | null;
              anchor?: string;
            }
        > | null;
        contentAlignment: 'center' | 'left' | 'right' | null;
        contentPosition:
          | 'bottom_center'
          | 'bottom_left'
          | 'bottom_right'
          | 'middle_center'
          | 'middle_left'
          | 'middle_right'
          | 'top_center'
          | 'top_left'
          | 'top_right'
          | null;
        overlayOpacity: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'productInformationSection';
        desktopMediaPosition: 'left' | 'right' | null;
        desktopMediaWidth: 'large' | 'medium' | 'small' | null;
        mediaAspectRatio: 'auto' | 'square' | 'video' | null;
        richtext: Array<
          | {
              quantitySelector?: boolean;
              shopPayButton?: boolean;
              _type: 'addToCartButton';
              _key: string;
            }
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: 'span';
                _key: string;
              }>;
              style?:
                | 'blockquote'
                | 'h1'
                | 'h2'
                | 'h3'
                | 'h4'
                | 'h5'
                | 'h6'
                | 'normal';
              listItem?: 'bullet' | 'number';
              markDefs: Array<
                | {
                    link: string | null;
                    openInNewTab: boolean | null;
                    _type: 'externalLink';
                    _key: string;
                    name: null;
                  }
                | {
                    link:
                      | {
                          documentType: 'blogPost';
                          slug: null;
                        }
                      | {
                          documentType: 'collection';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'home';
                          slug: null;
                        }
                      | {
                          documentType: 'page';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'product';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | null;
                    anchor: Anchor | null;
                    _type: 'internalLink';
                    _key: string;
                    name: null;
                  }
              > | null;
              level?: number;
              _type: 'block';
              _key: string;
            }
          | {
              priceProxy?: ProxyString;
              _type: 'price';
              _key: string;
            }
          | {
              descriptionProxy?: ProxyString;
              _type: 'shopifyDescription';
              _key: string;
            }
          | {
              titleProxy?: ProxyString;
              _type: 'shopifyTitle';
              _key: string;
            }
        > | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'relatedProductsSection';
        desktopColumns: number | null;
        heading: string | null;
        maxProducts: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'richtextSection';
        contentAlignment: 'center' | 'left' | 'right' | null;
        desktopContentPosition: 'center' | 'left' | 'right' | null;
        maxWidth: number | null;
        richtext: Array<
          | {
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              media?: unknown;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
              maxWidth?: RangeSlider;
              alignment?: 'center' | 'left' | 'right';
              _type: 'image';
              _key: string;
              altText: string | null;
              _ref: string | null;
            }
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: 'span';
                _key: string;
              }>;
              style?:
                | 'blockquote'
                | 'h1'
                | 'h2'
                | 'h3'
                | 'h4'
                | 'h5'
                | 'h6'
                | 'normal';
              listItem?: 'bullet' | 'number';
              markDefs: Array<
                | {
                    link: string | null;
                    openInNewTab: boolean | null;
                    _type: 'externalLink';
                    _key: string;
                    name: null;
                  }
                | {
                    link:
                      | {
                          documentType: 'blogPost';
                          slug: null;
                        }
                      | {
                          documentType: 'collection';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'home';
                          slug: null;
                        }
                      | {
                          documentType: 'page';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'product';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | null;
                    anchor: Anchor | null;
                    _type: 'internalLink';
                    _key: string;
                    name: null;
                  }
              > | null;
              level?: number;
              _type: 'block';
              _key: string;
            }
          | {
              _key: string;
              _type: 'button';
              label?: string;
              link:
                | {
                    documentType: 'blogPost';
                    slug: null;
                  }
                | {
                    documentType: 'collection';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | {
                    documentType: 'home';
                    slug: null;
                  }
                | {
                    documentType: 'page';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | {
                    documentType: 'product';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | null;
              anchor?: string;
            }
        > | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
  > | null;
} | null;
// Variable: DEFAULT_COLLECTION_TEMPLATE
// Query: *[_type == 'collectionTemplate' && default == true][0] {    _type,    name,    sections[] {      _key,      _type,          _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},            _type == 'collectionBannerSection' => {  _key,  _type,  bannerHeight,  contentAlignment,  contentPosition,  overlayOpacity,  showDescription,  showImage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionProductGridSection' => {  _key,  _type,  desktopColumns,  enableFiltering,  enableSorting,  mobileColumns,  productsPerPage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},      },  }
export type DEFAULT_COLLECTION_TEMPLATEResult = {
  _type: 'collectionTemplate';
  name: string | null;
  sections: Array<
    | {
        _key: string;
        _type: 'carouselSection';
        arrows: boolean | null;
        autoplay: boolean | null;
        title: string | null;
        loop: boolean | null;
        pagination: boolean | null;
        slides: Array<{
          _key: string;
          image: {
            _type: 'image';
            asset: {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
            } | null;
            altText: string | null;
            _ref: string | null;
            hotspot: SanityImageHotspot | null;
            crop: SanityImageCrop | null;
          } | null;
        }> | null;
        slidesPerViewDesktop: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'collectionBannerSection';
        bannerHeight: number | null;
        contentAlignment: 'center' | 'left' | 'right' | null;
        contentPosition:
          | 'bottom_center'
          | 'bottom_left'
          | 'bottom_right'
          | 'middle_center'
          | 'middle_left'
          | 'middle_right'
          | 'top_center'
          | 'top_left'
          | 'top_right'
          | null;
        overlayOpacity: number | null;
        showDescription: boolean | null;
        showImage: boolean | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'collectionListSection';
        collections: Array<{
          store: {
            gid: string | null;
          } | null;
        }> | null;
        desktopColumns: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'collectionProductGridSection';
        desktopColumns: number | null;
        enableFiltering: boolean | null;
        enableSorting: boolean | null;
        mobileColumns: number | null;
        productsPerPage: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'featuredCollectionSection';
        collection: {
          store: {
            gid: string | null;
            slug: Slug | null;
            title: string | null;
          } | null;
        } | null;
        desktopColumns: number | null;
        heading: string | null;
        maxProducts: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
        viewAll: boolean | null;
      }
    | {
        _key: string;
        _type: 'featuredProductSection';
        mediaAspectRatio: 'auto' | 'square' | 'video' | null;
        product: {
          store: {
            descriptionHtml: string | null;
            firstVariant: {
              store: {
                gid: string | null;
                previewImageUrl: string | null;
                price: number | null;
              } | null;
            } | null;
            gid: string | null;
            options: Array<{
              name: string | null;
              values: Array<string> | null;
            }> | null;
            previewImageUrl: string | null;
            title: string | null;
          } | null;
        } | null;
        richtext: Array<
          | {
              quantitySelector?: boolean;
              shopPayButton?: boolean;
              _type: 'addToCartButton';
              _key: string;
            }
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: 'span';
                _key: string;
              }>;
              style?:
                | 'blockquote'
                | 'h1'
                | 'h2'
                | 'h3'
                | 'h4'
                | 'h5'
                | 'h6'
                | 'normal';
              listItem?: 'bullet' | 'number';
              markDefs: Array<
                | {
                    link: string | null;
                    openInNewTab: boolean | null;
                    _type: 'externalLink';
                    _key: string;
                    name: null;
                  }
                | {
                    link:
                      | {
                          documentType: 'blogPost';
                          slug: null;
                        }
                      | {
                          documentType: 'collection';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'home';
                          slug: null;
                        }
                      | {
                          documentType: 'page';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'product';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | null;
                    anchor: Anchor | null;
                    _type: 'internalLink';
                    _key: string;
                    name: null;
                  }
              > | null;
              level?: number;
              _type: 'block';
              _key: string;
            }
          | {
              priceProxy?: ProxyString;
              _type: 'price';
              _key: string;
            }
          | {
              descriptionProxy?: ProxyString;
              _type: 'shopifyDescription';
              _key: string;
            }
          | {
              titleProxy?: ProxyString;
              _type: 'shopifyTitle';
              _key: string;
            }
        > | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'imageBannerSection';
        backgroundImage: {
          _type: 'image';
          asset: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
          } | null;
          altText: string | null;
          _ref: string | null;
          hotspot: SanityImageHotspot | null;
          crop: SanityImageCrop | null;
        } | null;
        bannerHeight: number | null;
        content: Array<
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: 'span';
                _key: string;
              }>;
              style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
              listItem?: never;
              markDefs: null;
              level?: number;
              _type: 'block';
              _key: string;
            }
          | {
              _key: string;
              _type: 'button';
              label?: string;
              link:
                | {
                    documentType: 'blogPost';
                    slug: null;
                  }
                | {
                    documentType: 'collection';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | {
                    documentType: 'home';
                    slug: null;
                  }
                | {
                    documentType: 'page';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | {
                    documentType: 'product';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | null;
              anchor?: string;
            }
        > | null;
        contentAlignment: 'center' | 'left' | 'right' | null;
        contentPosition:
          | 'bottom_center'
          | 'bottom_left'
          | 'bottom_right'
          | 'middle_center'
          | 'middle_left'
          | 'middle_right'
          | 'top_center'
          | 'top_left'
          | 'top_right'
          | null;
        overlayOpacity: number | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
    | {
        _key: string;
        _type: 'richtextSection';
        contentAlignment: 'center' | 'left' | 'right' | null;
        desktopContentPosition: 'center' | 'left' | 'right' | null;
        maxWidth: number | null;
        richtext: Array<
          | {
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              media?: unknown;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
              maxWidth?: RangeSlider;
              alignment?: 'center' | 'left' | 'right';
              _type: 'image';
              _key: string;
              altText: string | null;
              _ref: string | null;
            }
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: 'span';
                _key: string;
              }>;
              style?:
                | 'blockquote'
                | 'h1'
                | 'h2'
                | 'h3'
                | 'h4'
                | 'h5'
                | 'h6'
                | 'normal';
              listItem?: 'bullet' | 'number';
              markDefs: Array<
                | {
                    link: string | null;
                    openInNewTab: boolean | null;
                    _type: 'externalLink';
                    _key: string;
                    name: null;
                  }
                | {
                    link:
                      | {
                          documentType: 'blogPost';
                          slug: null;
                        }
                      | {
                          documentType: 'collection';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'home';
                          slug: null;
                        }
                      | {
                          documentType: 'page';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | {
                          documentType: 'product';
                          slug: {
                            _type: 'slug';
                            current: string | null;
                          } | null;
                        }
                      | null;
                    anchor: Anchor | null;
                    _type: 'internalLink';
                    _key: string;
                    name: null;
                  }
              > | null;
              level?: number;
              _type: 'block';
              _key: string;
            }
          | {
              _key: string;
              _type: 'button';
              label?: string;
              link:
                | {
                    documentType: 'blogPost';
                    slug: null;
                  }
                | {
                    documentType: 'collection';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | {
                    documentType: 'home';
                    slug: null;
                  }
                | {
                    documentType: 'page';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | {
                    documentType: 'product';
                    slug: {
                      _type: 'slug';
                      current: string | null;
                    } | null;
                  }
                | null;
              anchor?: string;
            }
        > | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }
  > | null;
} | null;
// Variable: ROOT_QUERY
// Query: {  '_type': 'root',  "defaultColorScheme": *[_type == "colorScheme" && default == true][0] {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  "fonts": *[_type == "typography"][0] {    body {  baseSize,  capitalize,  font[] {    antialiased,    fontAssets[] {      "fontName": ^.fontName,      fontStyle,      fontWeight,      ttf {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},      woff {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},      woff2 {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},    },    fontName,    fontType,  },  letterSpacing,  lineHeight,},    heading {  baseSize,  capitalize,  font[] {    antialiased,    fontAssets[] {      "fontName": ^.fontName,      fontStyle,      fontWeight,      ttf {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},      woff {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},      woff2 {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},    },    fontName,    fontType,  },  letterSpacing,  lineHeight,},    extra {  baseSize,  capitalize,  font[] {    antialiased,    fontAssets[] {      "fontName": ^.fontName,      fontStyle,      fontWeight,      ttf {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},      woff {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},      woff2 {  "extension": asset -> extension,  "mimeType": asset -> mimeType,  "url": asset -> url,},    },    fontName,    fontType,  },  letterSpacing,  lineHeight,},  },  "footer": *[_type == 'footer'][0] {    "footer": footers[0] {      _key,      _type,          _type == 'socialLinksOnly' => {  _key,  _type,  "copyright": coalesce(    copyright[_key == $language][0].value,    copyright[_key == $defaultLanguage][0].value,  ),  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},},      },    sections[] {      _key,      _type,          _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},      },  },  "header": *[_type == "header"][0] {  "announcementBar": coalesce(    announcementBar[_key == $language][0].value[],    announcementBar[_key == $defaultLanguage][0].value[],  )[] {    _type == "announcement" => {      _key,      externalLink,      link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},      openInNewTab,      text,    },  },  announcementBarColorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  autoRotateAnnouncements,  blur,  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  desktopLogoWidth,  "menu": coalesce(    menu[_key == $language][0].value[],    menu[_key == $defaultLanguage][0].value[],  )[] {  _type == "externalLink" => {  _key,  _type,  link,  name,  openInNewTab,},  _type == "internalLink" => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},  _type == "nestedNavigation" => {  _key,  _type,  childLinks[] {    _type == "externalLink" => {  _key,  _type,  link,  name,  openInNewTab,},    _type == "internalLink" => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},  },  link -> {    'documentType': _type,    'slug': coalesce(      slug,      store.slug    ) {      _type,      current    },  },  name,},},  padding,  showSeparatorLine,  sticky },  "settings": *[_type == "settings"][0] {  badgesCornerRadius,  badgesPosition,  badgesSaleColorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  badgesSoldOutColorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  blogCards,  buttonsBorder,  buttonsShadow,  cartCollection -> {    store {      gid,      title,    },  },  cartColorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  collectionCards,  description,  dropdownsAndPopupsBorder,  dropdownsAndPopupsShadow,  facebook,  favicon {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  grid,  inputsBorder,  inputsShadow,  instagram,  linkedin,  logo {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  mediaBorder,  mediaShadow,  pinterest,  productCards,  showCurrencyCodes,  showTrailingZeros,  siteName,  snapchat,  socialSharingImagePreview {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  spaceBetweenTemplateSections,  tiktok,  tumblr,  twitter,  vimeo,  youtube,},  "themeContent": *[_type == "themeContent"][0] {  account {    "accountDetails": coalesce(    accountDetails[_key == $language][0].value,    accountDetails[_key == $defaultLanguage][0].value,  ),    "addAddress": coalesce(    addAddress[_key == $language][0].value,    addAddress[_key == $defaultLanguage][0].value,  ),    "addName": coalesce(    addName[_key == $language][0].value,    addName[_key == $defaultLanguage][0].value,  ),    "addressBook": coalesce(    addressBook[_key == $language][0].value,    addressBook[_key == $defaultLanguage][0].value,  ),    "addressLine1": coalesce(    addressLine1[_key == $language][0].value,    addressLine1[_key == $defaultLanguage][0].value,  ),    "addressLine2": coalesce(    addressLine2[_key == $language][0].value,    addressLine2[_key == $defaultLanguage][0].value,  ),    "cancel": coalesce(    cancel[_key == $language][0].value,    cancel[_key == $defaultLanguage][0].value,  ),    "city": coalesce(    city[_key == $language][0].value,    city[_key == $defaultLanguage][0].value,  ),     "company": coalesce(    company[_key == $language][0].value,    company[_key == $defaultLanguage][0].value,  ),    "country": coalesce(    country[_key == $language][0].value,    country[_key == $defaultLanguage][0].value,  ),    "default": coalesce(    default[_key == $language][0].value,    default[_key == $defaultLanguage][0].value,  ),    "defaultAddress": coalesce(    defaultAddress[_key == $language][0].value,    defaultAddress[_key == $defaultLanguage][0].value,  ),    "discounts": coalesce(    discounts[_key == $language][0].value,    discounts[_key == $defaultLanguage][0].value,  ),    "discountsOff": coalesce(    discountsOff[_key == $language][0].value,    discountsOff[_key == $defaultLanguage][0].value,  ),    "edit": coalesce(    edit[_key == $language][0].value,    edit[_key == $defaultLanguage][0].value,  ),    "editAddress": coalesce(    editAddress[_key == $language][0].value,    editAddress[_key == $defaultLanguage][0].value,  ),    "emailAddress": coalesce(    emailAddress[_key == $language][0].value,    emailAddress[_key == $defaultLanguage][0].value,  ),    "firstName": coalesce(    firstName[_key == $language][0].value,    firstName[_key == $defaultLanguage][0].value,  ),    "fulfillmentStatus": coalesce(    fulfillmentStatus[_key == $language][0].value,    fulfillmentStatus[_key == $defaultLanguage][0].value,  ),    "lastName": coalesce(    lastName[_key == $language][0].value,    lastName[_key == $defaultLanguage][0].value,  ),    "name": coalesce(    name[_key == $language][0].value,    name[_key == $defaultLanguage][0].value,  ),    "noAddress": coalesce(    noAddress[_key == $language][0].value,    noAddress[_key == $defaultLanguage][0].value,  ),    "noOrdersMessage": coalesce(    noOrdersMessage[_key == $language][0].value,    noOrdersMessage[_key == $defaultLanguage][0].value,  ),    "noShippingAddress": coalesce(    noShippingAddress[_key == $language][0].value,    noShippingAddress[_key == $defaultLanguage][0].value,  ),    "orderDate": coalesce(    orderDate[_key == $language][0].value,    orderDate[_key == $defaultLanguage][0].value,  ),    "orderDetail": coalesce(    orderDetail[_key == $language][0].value,    orderDetail[_key == $defaultLanguage][0].value,  ),    "orderHistory": coalesce(    orderHistory[_key == $language][0].value,    orderHistory[_key == $defaultLanguage][0].value,  ),    "orderId": coalesce(    orderId[_key == $language][0].value,    orderId[_key == $defaultLanguage][0].value,  ),    "orderNumber": coalesce(    orderNumber[_key == $language][0].value,    orderNumber[_key == $defaultLanguage][0].value,  ),    "orderStatusCancelled": coalesce(    orderStatusCancelled[_key == $language][0].value,    orderStatusCancelled[_key == $defaultLanguage][0].value,  ),    "orderStatusError": coalesce(    orderStatusError[_key == $language][0].value,    orderStatusError[_key == $defaultLanguage][0].value,  ),    "orderStatusFailure": coalesce(    orderStatusFailure[_key == $language][0].value,    orderStatusFailure[_key == $defaultLanguage][0].value,  ),    "orderStatusOpen": coalesce(    orderStatusOpen[_key == $language][0].value,    orderStatusOpen[_key == $defaultLanguage][0].value,  ),    "orderStatusPending": coalesce(    orderStatusPending[_key == $language][0].value,    orderStatusPending[_key == $defaultLanguage][0].value,  ),    "orderStatusSuccess": coalesce(    orderStatusSuccess[_key == $language][0].value,    orderStatusSuccess[_key == $defaultLanguage][0].value,  ),    "phone": coalesce(    phone[_key == $language][0].value,    phone[_key == $defaultLanguage][0].value,  ),    "phoneNumber": coalesce(    phoneNumber[_key == $language][0].value,    phoneNumber[_key == $defaultLanguage][0].value,  ),    "placedOn": coalesce(    placedOn[_key == $language][0].value,    placedOn[_key == $defaultLanguage][0].value,  ),    "postalCode": coalesce(    postalCode[_key == $language][0].value,    postalCode[_key == $defaultLanguage][0].value,  ),    "price": coalesce(    price[_key == $language][0].value,    price[_key == $defaultLanguage][0].value,  ),    "product": coalesce(    product[_key == $language][0].value,    product[_key == $defaultLanguage][0].value,  ),    "profile": coalesce(    profile[_key == $language][0].value,    profile[_key == $defaultLanguage][0].value,  ),    "quantity": coalesce(    quantity[_key == $language][0].value,    quantity[_key == $defaultLanguage][0].value,  ),    "remove": coalesce(    remove[_key == $language][0].value,    remove[_key == $defaultLanguage][0].value,  ),    "returnToAccount": coalesce(    returnToAccount[_key == $language][0].value,    returnToAccount[_key == $defaultLanguage][0].value,  ),    "save": coalesce(    save[_key == $language][0].value,    save[_key == $defaultLanguage][0].value,  ),    "saving": coalesce(    saving[_key == $language][0].value,    saving[_key == $defaultLanguage][0].value,  ),    "shippingAddress": coalesce(    shippingAddress[_key == $language][0].value,    shippingAddress[_key == $defaultLanguage][0].value,  ),    "signOut": coalesce(    signOut[_key == $language][0].value,    signOut[_key == $defaultLanguage][0].value,  ),    "startShopping": coalesce(    startShopping[_key == $language][0].value,    startShopping[_key == $defaultLanguage][0].value,  ),    "stateProvince": coalesce(    stateProvince[_key == $language][0].value,    stateProvince[_key == $defaultLanguage][0].value,  ),    "status": coalesce(    status[_key == $language][0].value,    status[_key == $defaultLanguage][0].value,  ),    "subtotal": coalesce(    subtotal[_key == $language][0].value,    subtotal[_key == $defaultLanguage][0].value,  ),    "tax": coalesce(    tax[_key == $language][0].value,    tax[_key == $defaultLanguage][0].value,  ),    "total": coalesce(    total[_key == $language][0].value,    total[_key == $defaultLanguage][0].value,  ),    "updateYourProfile": coalesce(    updateYourProfile[_key == $language][0].value,    updateYourProfile[_key == $defaultLanguage][0].value,  ),    "viewDetails": coalesce(    viewDetails[_key == $language][0].value,    viewDetails[_key == $defaultLanguage][0].value,  ),    "welcome": coalesce(    welcome[_key == $language][0].value,    welcome[_key == $defaultLanguage][0].value,  ),    "welcomeToYourAccount": coalesce(    welcomeToYourAccount[_key == $language][0].value,    welcomeToYourAccount[_key == $defaultLanguage][0].value,  ),  },  cart {    "applyDiscount": coalesce(    applyDiscount[_key == $language][0].value,    applyDiscount[_key == $defaultLanguage][0].value,  ),    "continueShopping": coalesce(    continueShopping[_key == $language][0].value,    continueShopping[_key == $defaultLanguage][0].value,  ),    "discountCode": coalesce(    discountCode[_key == $language][0].value,    discountCode[_key == $defaultLanguage][0].value,  ),    "discounts": coalesce(    discounts[_key == $language][0].value,    discounts[_key == $defaultLanguage][0].value,  ),    "emptyMessage": coalesce(    emptyMessage[_key == $language][0].value,    emptyMessage[_key == $defaultLanguage][0].value,  ),    "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),    "orderSummary": coalesce(    orderSummary[_key == $language][0].value,    orderSummary[_key == $defaultLanguage][0].value,  ),    "proceedToCheckout": coalesce(    proceedToCheckout[_key == $language][0].value,    proceedToCheckout[_key == $defaultLanguage][0].value,  ),    "quantity": coalesce(    quantity[_key == $language][0].value,    quantity[_key == $defaultLanguage][0].value,  ),    "remove": coalesce(    remove[_key == $language][0].value,    remove[_key == $defaultLanguage][0].value,  ),    "subtotal": coalesce(    subtotal[_key == $language][0].value,    subtotal[_key == $defaultLanguage][0].value,  ),  },  collection {    "apply": coalesce(    apply[_key == $language][0].value,    apply[_key == $defaultLanguage][0].value,  ),    "clear": coalesce(    clear[_key == $language][0].value,    clear[_key == $defaultLanguage][0].value,  ),    "clearFilters": coalesce(    clearFilters[_key == $language][0].value,    clearFilters[_key == $defaultLanguage][0].value,  ),    "filterAndSort": coalesce(    filterAndSort[_key == $language][0].value,    filterAndSort[_key == $defaultLanguage][0].value,  ),    "filterInStock": coalesce(    filterInStock[_key == $language][0].value,    filterInStock[_key == $defaultLanguage][0].value,  ),    "filterOutOfStock": coalesce(    filterOutOfStock[_key == $language][0].value,    filterOutOfStock[_key == $defaultLanguage][0].value,  ),    "from": coalesce(    from[_key == $language][0].value,    from[_key == $defaultLanguage][0].value,  ),    "loading": coalesce(    loading[_key == $language][0].value,    loading[_key == $defaultLanguage][0].value,  ),    "loadMoreProducts": coalesce(    loadMoreProducts[_key == $language][0].value,    loadMoreProducts[_key == $defaultLanguage][0].value,  ),    "loadPrevious": coalesce(    loadPrevious[_key == $language][0].value,    loadPrevious[_key == $defaultLanguage][0].value,  ),    "noCollectionFound": coalesce(    noCollectionFound[_key == $language][0].value,    noCollectionFound[_key == $defaultLanguage][0].value,  ),    "noProductFound": coalesce(    noProductFound[_key == $language][0].value,    noProductFound[_key == $defaultLanguage][0].value,  ),    "sortBestSelling": coalesce(    sortBestSelling[_key == $language][0].value,    sortBestSelling[_key == $defaultLanguage][0].value,  ),    "sortBy": coalesce(    sortBy[_key == $language][0].value,    sortBy[_key == $defaultLanguage][0].value,  ),    "sortFeatured": coalesce(    sortFeatured[_key == $language][0].value,    sortFeatured[_key == $defaultLanguage][0].value,  ),    "sortHighLow": coalesce(    sortHighLow[_key == $language][0].value,    sortHighLow[_key == $defaultLanguage][0].value,  ),    "sortLowHigh": coalesce(    sortLowHigh[_key == $language][0].value,    sortLowHigh[_key == $defaultLanguage][0].value,  ),    "sortNewest": coalesce(    sortNewest[_key == $language][0].value,    sortNewest[_key == $defaultLanguage][0].value,  ),    "to": coalesce(    to[_key == $language][0].value,    to[_key == $defaultLanguage][0].value,  ),     "viewAll": coalesce(    viewAll[_key == $language][0].value,    viewAll[_key == $defaultLanguage][0].value,  ),  },  error {    "addressCreation": coalesce(    addressCreation[_key == $language][0].value,    addressCreation[_key == $defaultLanguage][0].value,  ),    "missingAddressId": coalesce(    missingAddressId[_key == $language][0].value,    missingAddressId[_key == $defaultLanguage][0].value,  ),    "pageNotFound": coalesce(    pageNotFound[_key == $language][0].value,    pageNotFound[_key == $defaultLanguage][0].value,  ),    "reloadPage": coalesce(    reloadPage[_key == $language][0].value,    reloadPage[_key == $defaultLanguage][0].value,  ),    "sectionError": coalesce(    sectionError[_key == $language][0].value,    sectionError[_key == $defaultLanguage][0].value,  ),    "serverError": coalesce(    serverError[_key == $language][0].value,    serverError[_key == $defaultLanguage][0].value,  ),  },  product {    "addToCart": coalesce(    addToCart[_key == $language][0].value,    addToCart[_key == $defaultLanguage][0].value,  ),    "quantitySelector": coalesce(    quantitySelector[_key == $language][0].value,    quantitySelector[_key == $defaultLanguage][0].value,  ),    "sale": coalesce(    sale[_key == $language][0].value,    sale[_key == $defaultLanguage][0].value,  ),    "soldOut": coalesce(    soldOut[_key == $language][0].value,    soldOut[_key == $defaultLanguage][0].value,  ),  },},}
export type ROOT_QUERYResult = {
  _type: 'root';
  defaultColorScheme: {
    background: {
      alpha: null;
      hex: string | null;
      hsl: {
        h?: number;
        s?: number;
        l?: number;
      } | null;
      rgb: {
        r?: number;
        g?: number;
        b?: number;
      } | null;
    } | null;
    border: {
      alpha: null;
      hex: string | null;
      hsl: {
        h?: number;
        s?: number;
        l?: number;
      } | null;
      rgb: {
        r?: number;
        g?: number;
        b?: number;
      } | null;
    } | null;
    card: {
      alpha: null;
      hex: string | null;
      hsl: {
        h?: number;
        s?: number;
        l?: number;
      } | null;
      rgb: {
        r?: number;
        g?: number;
        b?: number;
      } | null;
    } | null;
    cardForeground: {
      alpha: null;
      hex: string | null;
      hsl: {
        h?: number;
        s?: number;
        l?: number;
      } | null;
      rgb: {
        r?: number;
        g?: number;
        b?: number;
      } | null;
    } | null;
    foreground: {
      alpha: null;
      hex: string | null;
      hsl: {
        h?: number;
        s?: number;
        l?: number;
      } | null;
      rgb: {
        r?: number;
        g?: number;
        b?: number;
      } | null;
    } | null;
    primary: {
      alpha: null;
      hex: string | null;
      hsl: {
        h?: number;
        s?: number;
        l?: number;
      } | null;
      rgb: {
        r?: number;
        g?: number;
        b?: number;
      } | null;
    } | null;
    primaryForeground: {
      alpha: null;
      hex: string | null;
      hsl: {
        h?: number;
        s?: number;
        l?: number;
      } | null;
      rgb: {
        r?: number;
        g?: number;
        b?: number;
      } | null;
    } | null;
  } | null;
  fonts: {
    body: {
      baseSize: number | null;
      capitalize: null;
      font: Array<{
        antialiased: boolean | null;
        fontAssets: Array<{
          fontName: string | null;
          fontStyle: 'italic' | 'normal' | null;
          fontWeight:
            | 100
            | 200
            | 300
            | 400
            | 500
            | 600
            | 700
            | 800
            | 900
            | null;
          ttf: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
          woff: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
          woff2: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
        }> | null;
        fontName: string | null;
        fontType: 'sans-serif' | 'serif' | null;
      }> | null;
      letterSpacing: number | null;
      lineHeight: number | null;
    } | null;
    heading: {
      baseSize: number | null;
      capitalize: boolean | null;
      font: Array<{
        antialiased: boolean | null;
        fontAssets: Array<{
          fontName: string | null;
          fontStyle: 'italic' | 'normal' | null;
          fontWeight:
            | 100
            | 200
            | 300
            | 400
            | 500
            | 600
            | 700
            | 800
            | 900
            | null;
          ttf: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
          woff: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
          woff2: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
        }> | null;
        fontName: string | null;
        fontType: 'sans-serif' | 'serif' | null;
      }> | null;
      letterSpacing: number | null;
      lineHeight: number | null;
    } | null;
    extra: {
      baseSize: number | null;
      capitalize: boolean | null;
      font: Array<{
        antialiased: boolean | null;
        fontAssets: Array<{
          fontName: string | null;
          fontStyle: 'italic' | 'normal' | null;
          fontWeight:
            | 100
            | 200
            | 300
            | 400
            | 500
            | 600
            | 700
            | 800
            | 900
            | null;
          ttf: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
          woff: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
          woff2: {
            extension: string | null;
            mimeType: string | null;
            url: string | null;
          } | null;
        }> | null;
        fontName: string | null;
        fontType: 'sans-serif' | 'serif' | null;
      }> | null;
      letterSpacing: number | null;
      lineHeight: number | null;
    } | null;
  } | null;
  footer: {
    footer: {
      _key: string;
      _type: 'socialLinksOnly';
      copyright: string | null;
      settings: {
        colorScheme: {
          background: {
            alpha: null;
            hex: string | null;
            hsl: {
              h?: number;
              s?: number;
              l?: number;
            } | null;
            rgb: {
              r?: number;
              g?: number;
              b?: number;
            } | null;
          } | null;
          border: {
            alpha: null;
            hex: string | null;
            hsl: {
              h?: number;
              s?: number;
              l?: number;
            } | null;
            rgb: {
              r?: number;
              g?: number;
              b?: number;
            } | null;
          } | null;
          card: {
            alpha: null;
            hex: string | null;
            hsl: {
              h?: number;
              s?: number;
              l?: number;
            } | null;
            rgb: {
              r?: number;
              g?: number;
              b?: number;
            } | null;
          } | null;
          cardForeground: {
            alpha: null;
            hex: string | null;
            hsl: {
              h?: number;
              s?: number;
              l?: number;
            } | null;
            rgb: {
              r?: number;
              g?: number;
              b?: number;
            } | null;
          } | null;
          foreground: {
            alpha: null;
            hex: string | null;
            hsl: {
              h?: number;
              s?: number;
              l?: number;
            } | null;
            rgb: {
              r?: number;
              g?: number;
              b?: number;
            } | null;
          } | null;
          primary: {
            alpha: null;
            hex: string | null;
            hsl: {
              h?: number;
              s?: number;
              l?: number;
            } | null;
            rgb: {
              r?: number;
              g?: number;
              b?: number;
            } | null;
          } | null;
          primaryForeground: {
            alpha: null;
            hex: string | null;
            hsl: {
              h?: number;
              s?: number;
              l?: number;
            } | null;
            rgb: {
              r?: number;
              g?: number;
              b?: number;
            } | null;
          } | null;
        } | null;
        customCss: Code | null;
        hide: boolean | null;
        padding: Padding | null;
      } | null;
    } | null;
    sections: Array<
      | {
          _key: string;
          _type: 'carouselSection';
          arrows: boolean | null;
          autoplay: boolean | null;
          title: string | null;
          loop: boolean | null;
          pagination: boolean | null;
          slides: Array<{
            _key: string;
            image: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
          }> | null;
          slidesPerViewDesktop: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'collectionListSection';
          collections: Array<{
            store: {
              gid: string | null;
            } | null;
          }> | null;
          desktopColumns: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'featuredCollectionSection';
          collection: {
            store: {
              gid: string | null;
              slug: Slug | null;
              title: string | null;
            } | null;
          } | null;
          desktopColumns: number | null;
          heading: string | null;
          maxProducts: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
          viewAll: boolean | null;
        }
      | {
          _key: string;
          _type: 'featuredProductSection';
          mediaAspectRatio: 'auto' | 'square' | 'video' | null;
          product: {
            store: {
              descriptionHtml: string | null;
              firstVariant: {
                store: {
                  gid: string | null;
                  previewImageUrl: string | null;
                  price: number | null;
                } | null;
              } | null;
              gid: string | null;
              options: Array<{
                name: string | null;
                values: Array<string> | null;
              }> | null;
              previewImageUrl: string | null;
              title: string | null;
            } | null;
          } | null;
          richtext: Array<
            | {
                quantitySelector?: boolean;
                shopPayButton?: boolean;
                _type: 'addToCartButton';
                _key: string;
              }
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?:
                  | 'blockquote'
                  | 'h1'
                  | 'h2'
                  | 'h3'
                  | 'h4'
                  | 'h5'
                  | 'h6'
                  | 'normal';
                listItem?: 'bullet' | 'number';
                markDefs: Array<
                  | {
                      link: string | null;
                      openInNewTab: boolean | null;
                      _type: 'externalLink';
                      _key: string;
                      name: null;
                    }
                  | {
                      link:
                        | {
                            documentType: 'blogPost';
                            slug: null;
                          }
                        | {
                            documentType: 'collection';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'home';
                            slug: null;
                          }
                        | {
                            documentType: 'page';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'product';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | null;
                      anchor: Anchor | null;
                      _type: 'internalLink';
                      _key: string;
                      name: null;
                    }
                > | null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                priceProxy?: ProxyString;
                _type: 'price';
                _key: string;
              }
            | {
                descriptionProxy?: ProxyString;
                _type: 'shopifyDescription';
                _key: string;
              }
            | {
                titleProxy?: ProxyString;
                _type: 'shopifyTitle';
                _key: string;
              }
          > | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'imageBannerSection';
          backgroundImage: {
            _type: 'image';
            asset: {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
            } | null;
            altText: string | null;
            _ref: string | null;
            hotspot: SanityImageHotspot | null;
            crop: SanityImageCrop | null;
          } | null;
          bannerHeight: number | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                listItem?: never;
                markDefs: null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                _key: string;
                _type: 'button';
                label?: string;
                link:
                  | {
                      documentType: 'blogPost';
                      slug: null;
                    }
                  | {
                      documentType: 'collection';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'home';
                      slug: null;
                    }
                  | {
                      documentType: 'page';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'product';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | null;
                anchor?: string;
              }
          > | null;
          contentAlignment: 'center' | 'left' | 'right' | null;
          contentPosition:
            | 'bottom_center'
            | 'bottom_left'
            | 'bottom_right'
            | 'middle_center'
            | 'middle_left'
            | 'middle_right'
            | 'top_center'
            | 'top_left'
            | 'top_right'
            | null;
          overlayOpacity: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'richtextSection';
          contentAlignment: 'center' | 'left' | 'right' | null;
          desktopContentPosition: 'center' | 'left' | 'right' | null;
          maxWidth: number | null;
          richtext: Array<
            | {
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                media?: unknown;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
                maxWidth?: RangeSlider;
                alignment?: 'center' | 'left' | 'right';
                _type: 'image';
                _key: string;
                altText: string | null;
                _ref: string | null;
              }
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?:
                  | 'blockquote'
                  | 'h1'
                  | 'h2'
                  | 'h3'
                  | 'h4'
                  | 'h5'
                  | 'h6'
                  | 'normal';
                listItem?: 'bullet' | 'number';
                markDefs: Array<
                  | {
                      link: string | null;
                      openInNewTab: boolean | null;
                      _type: 'externalLink';
                      _key: string;
                      name: null;
                    }
                  | {
                      link:
                        | {
                            documentType: 'blogPost';
                            slug: null;
                          }
                        | {
                            documentType: 'collection';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'home';
                            slug: null;
                          }
                        | {
                            documentType: 'page';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'product';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | null;
                      anchor: Anchor | null;
                      _type: 'internalLink';
                      _key: string;
                      name: null;
                    }
                > | null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                _key: string;
                _type: 'button';
                label?: string;
                link:
                  | {
                      documentType: 'blogPost';
                      slug: null;
                    }
                  | {
                      documentType: 'collection';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'home';
                      slug: null;
                    }
                  | {
                      documentType: 'page';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'product';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | null;
                anchor?: string;
              }
          > | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
    > | null;
  } | null;
  header: {
    announcementBar: Array<{
      _key: string;
      externalLink: string | null;
      link:
        | {
            documentType: 'blogPost';
            slug: null;
          }
        | {
            documentType: 'collection';
            slug: {
              _type: 'slug';
              current: string | null;
            } | null;
          }
        | {
            documentType: 'home';
            slug: null;
          }
        | {
            documentType: 'page';
            slug: {
              _type: 'slug';
              current: string | null;
            } | null;
          }
        | {
            documentType: 'product';
            slug: {
              _type: 'slug';
              current: string | null;
            } | null;
          }
        | null;
      openInNewTab: boolean | null;
      text: string | null;
    }> | null;
    announcementBarColorScheme: {
      background: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      border: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      card: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      cardForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      foreground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primary: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primaryForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
    } | null;
    autoRotateAnnouncements: boolean | null;
    blur: boolean | null;
    colorScheme: {
      background: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      border: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      card: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      cardForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      foreground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primary: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primaryForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
    } | null;
    desktopLogoWidth: number | null;
    menu: Array<
      | {
          _key: string;
          _type: 'externalLink';
          link: string | null;
          name: string | null;
          openInNewTab: boolean | null;
        }
      | {
          _key: string;
          _type: 'internalLink';
          anchor: Anchor | null;
          link:
            | {
                documentType: 'blogPost';
                slug: null;
              }
            | {
                documentType: 'collection';
                slug: {
                  _type: 'slug';
                  current: string | null;
                } | null;
              }
            | {
                documentType: 'home';
                slug: null;
              }
            | {
                documentType: 'page';
                slug: {
                  _type: 'slug';
                  current: string | null;
                } | null;
              }
            | {
                documentType: 'product';
                slug: {
                  _type: 'slug';
                  current: string | null;
                } | null;
              }
            | null;
          name: string | null;
        }
      | {
          _key: string;
          _type: 'nestedNavigation';
          childLinks: Array<
            | {
                _key: string;
                _type: 'externalLink';
                link: string | null;
                name: string | null;
                openInNewTab: boolean | null;
              }
            | {
                _key: string;
                _type: 'internalLink';
                anchor: Anchor | null;
                link:
                  | {
                      documentType: 'blogPost';
                      slug: null;
                    }
                  | {
                      documentType: 'collection';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'home';
                      slug: null;
                    }
                  | {
                      documentType: 'page';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'product';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | null;
                name: string | null;
              }
          > | null;
          link:
            | {
                documentType: 'blogPost';
                slug: null;
              }
            | {
                documentType: 'collection';
                slug: {
                  _type: 'slug';
                  current: string | null;
                } | null;
              }
            | {
                documentType: 'home';
                slug: null;
              }
            | {
                documentType: 'page';
                slug: {
                  _type: 'slug';
                  current: string | null;
                } | null;
              }
            | {
                documentType: 'product';
                slug: {
                  _type: 'slug';
                  current: string | null;
                } | null;
              }
            | null;
          name: string | null;
        }
    > | null;
    padding: Padding | null;
    showSeparatorLine: boolean | null;
    sticky: 'always' | 'none' | 'onScrollUp' | null;
  } | null;
  settings: {
    badgesCornerRadius: number | null;
    badgesPosition:
      | 'bottom_left'
      | 'bottom_right'
      | 'top_left'
      | 'top_right'
      | null;
    badgesSaleColorScheme: {
      background: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      border: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      card: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      cardForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      foreground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primary: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primaryForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
    } | null;
    badgesSoldOutColorScheme: {
      background: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      border: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      card: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      cardForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      foreground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primary: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primaryForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
    } | null;
    blogCards: {
      style?: 'card' | 'standard';
      imageAspectRatio?: 'auto' | 'square' | 'video';
      textAlignment?: 'center' | 'left' | 'right';
      border?: {
        thickness?: number;
        opacity?: number;
        cornerRadius?: number;
      };
      shadow?: {
        opacity?: number;
        horizontalOffset?: number;
        verticalOffset?: number;
        blur?: number;
      };
    } | null;
    buttonsBorder: {
      thickness?: number;
      opacity?: number;
      cornerRadius?: number;
    } | null;
    buttonsShadow: {
      opacity?: number;
      horizontalOffset?: number;
      verticalOffset?: number;
      blur?: number;
    } | null;
    cartCollection: {
      store: {
        gid: string | null;
        title: string | null;
      } | null;
    } | null;
    cartColorScheme: {
      background: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      border: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      card: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      cardForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      foreground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primary: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
      primaryForeground: {
        alpha: null;
        hex: string | null;
        hsl: {
          h?: number;
          s?: number;
          l?: number;
        } | null;
        rgb: {
          r?: number;
          g?: number;
          b?: number;
        } | null;
      } | null;
    } | null;
    collectionCards: {
      style?: 'card' | 'standard';
      imageAspectRatio?: 'auto' | 'square' | 'video';
      textAlignment?: 'center' | 'left' | 'right';
      border?: {
        thickness?: number;
        opacity?: number;
        cornerRadius?: number;
      };
      shadow?: {
        opacity?: number;
        horizontalOffset?: number;
        verticalOffset?: number;
        blur?: number;
      };
    } | null;
    description: null;
    dropdownsAndPopupsBorder: {
      thickness?: number;
      opacity?: number;
      cornerRadius?: number;
    } | null;
    dropdownsAndPopupsShadow: {
      opacity?: number;
      horizontalOffset?: number;
      verticalOffset?: number;
      blur?: number;
    } | null;
    facebook: string | null;
    favicon: {
      _type: 'image';
      asset: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      } | null;
      altText: string | null;
      _ref: string | null;
      hotspot: SanityImageHotspot | null;
      crop: SanityImageCrop | null;
    } | null;
    grid: {
      horizontalSpace?: number;
      verticalSpace?: number;
    } | null;
    inputsBorder: {
      thickness?: number;
      opacity?: number;
      cornerRadius?: number;
    } | null;
    inputsShadow: {
      opacity?: number;
      horizontalOffset?: number;
      verticalOffset?: number;
      blur?: number;
    } | null;
    instagram: string | null;
    linkedin: string | null;
    logo: {
      _type: 'image';
      asset: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      } | null;
      altText: string | null;
      _ref: string | null;
      hotspot: SanityImageHotspot | null;
      crop: SanityImageCrop | null;
    } | null;
    mediaBorder: {
      thickness?: number;
      opacity?: number;
      cornerRadius?: number;
    } | null;
    mediaShadow: {
      opacity?: number;
      horizontalOffset?: number;
      verticalOffset?: number;
      blur?: number;
    } | null;
    pinterest: string | null;
    productCards: {
      style?: 'card' | 'standard';
      imageAspectRatio?: 'auto' | 'square' | 'video';
      textAlignment?: 'center' | 'left' | 'right';
      border?: {
        thickness?: number;
        opacity?: number;
        cornerRadius?: number;
      };
      shadow?: {
        opacity?: number;
        horizontalOffset?: number;
        verticalOffset?: number;
        blur?: number;
      };
    } | null;
    showCurrencyCodes: boolean | null;
    showTrailingZeros: Array<string> | null;
    siteName: string | null;
    snapchat: string | null;
    socialSharingImagePreview: {
      _type: 'image';
      asset: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      } | null;
      altText: string | null;
      _ref: string | null;
      hotspot: SanityImageHotspot | null;
      crop: SanityImageCrop | null;
    } | null;
    spaceBetweenTemplateSections: number | null;
    tiktok: string | null;
    tumblr: string | null;
    twitter: string | null;
    vimeo: string | null;
    youtube: string | null;
  } | null;
  themeContent: {
    account: {
      accountDetails: string | null;
      addAddress: string | null;
      addName: string | null;
      addressBook: string | null;
      addressLine1: string | null;
      addressLine2: string | null;
      cancel: string | null;
      city: string | null;
      company: string | null;
      country: string | null;
      default: string | null;
      defaultAddress: string | null;
      discounts: string | null;
      discountsOff: string | null;
      edit: string | null;
      editAddress: string | null;
      emailAddress: string | null;
      firstName: string | null;
      fulfillmentStatus: string | null;
      lastName: string | null;
      name: string | null;
      noAddress: string | null;
      noOrdersMessage: string | null;
      noShippingAddress: string | null;
      orderDate: string | null;
      orderDetail: string | null;
      orderHistory: string | null;
      orderId: string | null;
      orderNumber: string | null;
      orderStatusCancelled: string | null;
      orderStatusError: string | null;
      orderStatusFailure: string | null;
      orderStatusOpen: string | null;
      orderStatusPending: string | null;
      orderStatusSuccess: string | null;
      phone: string | null;
      phoneNumber: string | null;
      placedOn: string | null;
      postalCode: string | null;
      price: string | null;
      product: string | null;
      profile: string | null;
      quantity: string | null;
      remove: string | null;
      returnToAccount: string | null;
      save: string | null;
      saving: string | null;
      shippingAddress: string | null;
      signOut: string | null;
      startShopping: string | null;
      stateProvince: string | null;
      status: string | null;
      subtotal: string | null;
      tax: string | null;
      total: string | null;
      updateYourProfile: string | null;
      viewDetails: string | null;
      welcome: string | null;
      welcomeToYourAccount: string | null;
    } | null;
    cart: {
      applyDiscount: string | null;
      continueShopping: string | null;
      discountCode: string | null;
      discounts: string | null;
      emptyMessage: string | null;
      heading: string | null;
      orderSummary: string | null;
      proceedToCheckout: string | null;
      quantity: string | null;
      remove: string | null;
      subtotal: string | null;
    } | null;
    collection: {
      apply: string | null;
      clear: string | null;
      clearFilters: string | null;
      filterAndSort: string | null;
      filterInStock: string | null;
      filterOutOfStock: string | null;
      from: string | null;
      loading: string | null;
      loadMoreProducts: string | null;
      loadPrevious: string | null;
      noCollectionFound: string | null;
      noProductFound: string | null;
      sortBestSelling: string | null;
      sortBy: string | null;
      sortFeatured: string | null;
      sortHighLow: string | null;
      sortLowHigh: string | null;
      sortNewest: string | null;
      to: string | null;
      viewAll: string | null;
    } | null;
    error: {
      addressCreation: string | null;
      missingAddressId: string | null;
      pageNotFound: string | null;
      reloadPage: string | null;
      sectionError: string | null;
      serverError: string | null;
    } | null;
    product: {
      addToCart: string | null;
      quantitySelector: string | null;
      sale: string | null;
      soldOut: string | null;
    } | null;
  } | null;
};
// Variable: COLLECTION_QUERY
// Query: {  '_type': 'collection',  "collection": *[_type == "collection" && store.slug.current == $collectionHandle][0] {    store {      gid,    },    template -> {      sections[] {        _key,        _type,            _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},              _type == 'collectionBannerSection' => {  _key,  _type,  bannerHeight,  contentAlignment,  contentPosition,  overlayOpacity,  showDescription,  showImage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionProductGridSection' => {  _key,  _type,  desktopColumns,  enableFiltering,  enableSorting,  mobileColumns,  productsPerPage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},        },    },  },  "defaultCollectionTemplate": *[_type == 'collectionTemplate' && default == true][0] {    _type,    name,    sections[] {      _key,      _type,          _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},            _type == 'collectionBannerSection' => {  _key,  _type,  bannerHeight,  contentAlignment,  contentPosition,  overlayOpacity,  showDescription,  showImage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionProductGridSection' => {  _key,  _type,  desktopColumns,  enableFiltering,  enableSorting,  mobileColumns,  productsPerPage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},      },  },}
export type COLLECTION_QUERYResult = {
  _type: 'collection';
  collection: {
    store: {
      gid: string | null;
    } | null;
    template: {
      sections: Array<
        | {
            _key: string;
            _type: 'carouselSection';
            arrows: boolean | null;
            autoplay: boolean | null;
            title: string | null;
            loop: boolean | null;
            pagination: boolean | null;
            slides: Array<{
              _key: string;
              image: {
                _type: 'image';
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                altText: string | null;
                _ref: string | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
              } | null;
            }> | null;
            slidesPerViewDesktop: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionBannerSection';
            bannerHeight: number | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            showDescription: boolean | null;
            showImage: boolean | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionListSection';
            collections: Array<{
              store: {
                gid: string | null;
              } | null;
            }> | null;
            desktopColumns: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionProductGridSection';
            desktopColumns: number | null;
            enableFiltering: boolean | null;
            enableSorting: boolean | null;
            mobileColumns: number | null;
            productsPerPage: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'featuredCollectionSection';
            collection: {
              store: {
                gid: string | null;
                slug: Slug | null;
                title: string | null;
              } | null;
            } | null;
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
            viewAll: boolean | null;
          }
        | {
            _key: string;
            _type: 'featuredProductSection';
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            product: {
              store: {
                descriptionHtml: string | null;
                firstVariant: {
                  store: {
                    gid: string | null;
                    previewImageUrl: string | null;
                    price: number | null;
                  } | null;
                } | null;
                gid: string | null;
                options: Array<{
                  name: string | null;
                  values: Array<string> | null;
                }> | null;
                previewImageUrl: string | null;
                title: string | null;
              } | null;
            } | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'imageBannerSection';
            backgroundImage: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
            bannerHeight: number | null;
            content: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                  listItem?: never;
                  markDefs: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'richtextSection';
            contentAlignment: 'center' | 'left' | 'right' | null;
            desktopContentPosition: 'center' | 'left' | 'right' | null;
            maxWidth: number | null;
            richtext: Array<
              | {
                  asset: {
                    _ref: string;
                    _type: 'reference';
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  } | null;
                  media?: unknown;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  maxWidth?: RangeSlider;
                  alignment?: 'center' | 'left' | 'right';
                  _type: 'image';
                  _key: string;
                  altText: string | null;
                  _ref: string | null;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
      > | null;
    } | null;
  } | null;
  defaultCollectionTemplate: {
    _type: 'collectionTemplate';
    name: string | null;
    sections: Array<
      | {
          _key: string;
          _type: 'carouselSection';
          arrows: boolean | null;
          autoplay: boolean | null;
          title: string | null;
          loop: boolean | null;
          pagination: boolean | null;
          slides: Array<{
            _key: string;
            image: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
          }> | null;
          slidesPerViewDesktop: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'collectionBannerSection';
          bannerHeight: number | null;
          contentAlignment: 'center' | 'left' | 'right' | null;
          contentPosition:
            | 'bottom_center'
            | 'bottom_left'
            | 'bottom_right'
            | 'middle_center'
            | 'middle_left'
            | 'middle_right'
            | 'top_center'
            | 'top_left'
            | 'top_right'
            | null;
          overlayOpacity: number | null;
          showDescription: boolean | null;
          showImage: boolean | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'collectionListSection';
          collections: Array<{
            store: {
              gid: string | null;
            } | null;
          }> | null;
          desktopColumns: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'collectionProductGridSection';
          desktopColumns: number | null;
          enableFiltering: boolean | null;
          enableSorting: boolean | null;
          mobileColumns: number | null;
          productsPerPage: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'featuredCollectionSection';
          collection: {
            store: {
              gid: string | null;
              slug: Slug | null;
              title: string | null;
            } | null;
          } | null;
          desktopColumns: number | null;
          heading: string | null;
          maxProducts: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
          viewAll: boolean | null;
        }
      | {
          _key: string;
          _type: 'featuredProductSection';
          mediaAspectRatio: 'auto' | 'square' | 'video' | null;
          product: {
            store: {
              descriptionHtml: string | null;
              firstVariant: {
                store: {
                  gid: string | null;
                  previewImageUrl: string | null;
                  price: number | null;
                } | null;
              } | null;
              gid: string | null;
              options: Array<{
                name: string | null;
                values: Array<string> | null;
              }> | null;
              previewImageUrl: string | null;
              title: string | null;
            } | null;
          } | null;
          richtext: Array<
            | {
                quantitySelector?: boolean;
                shopPayButton?: boolean;
                _type: 'addToCartButton';
                _key: string;
              }
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?:
                  | 'blockquote'
                  | 'h1'
                  | 'h2'
                  | 'h3'
                  | 'h4'
                  | 'h5'
                  | 'h6'
                  | 'normal';
                listItem?: 'bullet' | 'number';
                markDefs: Array<
                  | {
                      link: string | null;
                      openInNewTab: boolean | null;
                      _type: 'externalLink';
                      _key: string;
                      name: null;
                    }
                  | {
                      link:
                        | {
                            documentType: 'blogPost';
                            slug: null;
                          }
                        | {
                            documentType: 'collection';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'home';
                            slug: null;
                          }
                        | {
                            documentType: 'page';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'product';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | null;
                      anchor: Anchor | null;
                      _type: 'internalLink';
                      _key: string;
                      name: null;
                    }
                > | null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                priceProxy?: ProxyString;
                _type: 'price';
                _key: string;
              }
            | {
                descriptionProxy?: ProxyString;
                _type: 'shopifyDescription';
                _key: string;
              }
            | {
                titleProxy?: ProxyString;
                _type: 'shopifyTitle';
                _key: string;
              }
          > | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'imageBannerSection';
          backgroundImage: {
            _type: 'image';
            asset: {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
            } | null;
            altText: string | null;
            _ref: string | null;
            hotspot: SanityImageHotspot | null;
            crop: SanityImageCrop | null;
          } | null;
          bannerHeight: number | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                listItem?: never;
                markDefs: null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                _key: string;
                _type: 'button';
                label?: string;
                link:
                  | {
                      documentType: 'blogPost';
                      slug: null;
                    }
                  | {
                      documentType: 'collection';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'home';
                      slug: null;
                    }
                  | {
                      documentType: 'page';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'product';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | null;
                anchor?: string;
              }
          > | null;
          contentAlignment: 'center' | 'left' | 'right' | null;
          contentPosition:
            | 'bottom_center'
            | 'bottom_left'
            | 'bottom_right'
            | 'middle_center'
            | 'middle_left'
            | 'middle_right'
            | 'top_center'
            | 'top_left'
            | 'top_right'
            | null;
          overlayOpacity: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'richtextSection';
          contentAlignment: 'center' | 'left' | 'right' | null;
          desktopContentPosition: 'center' | 'left' | 'right' | null;
          maxWidth: number | null;
          richtext: Array<
            | {
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                media?: unknown;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
                maxWidth?: RangeSlider;
                alignment?: 'center' | 'left' | 'right';
                _type: 'image';
                _key: string;
                altText: string | null;
                _ref: string | null;
              }
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?:
                  | 'blockquote'
                  | 'h1'
                  | 'h2'
                  | 'h3'
                  | 'h4'
                  | 'h5'
                  | 'h6'
                  | 'normal';
                listItem?: 'bullet' | 'number';
                markDefs: Array<
                  | {
                      link: string | null;
                      openInNewTab: boolean | null;
                      _type: 'externalLink';
                      _key: string;
                      name: null;
                    }
                  | {
                      link:
                        | {
                            documentType: 'blogPost';
                            slug: null;
                          }
                        | {
                            documentType: 'collection';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'home';
                            slug: null;
                          }
                        | {
                            documentType: 'page';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'product';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | null;
                      anchor: Anchor | null;
                      _type: 'internalLink';
                      _key: string;
                      name: null;
                    }
                > | null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                _key: string;
                _type: 'button';
                label?: string;
                link:
                  | {
                      documentType: 'blogPost';
                      slug: null;
                    }
                  | {
                      documentType: 'collection';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'home';
                      slug: null;
                    }
                  | {
                      documentType: 'page';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'product';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | null;
                anchor?: string;
              }
          > | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
    > | null;
  } | null;
};
// Variable: PAGE_QUERY
// Query: *[(_type == "page" && ($handle != "home" && slug.current == $handle)) || (    _type == "home" && $handle == "home"  )][0] {    _type,    sections[] {      _key,      _type,          _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},      },    seo {      "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),      "description": coalesce(    description[_key == $language][0].value,    description[_key == $defaultLanguage][0].value,  ),      image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},    },  }
export type PAGE_QUERYResult =
  | {
      _type: 'home';
      sections: Array<
        | {
            _key: string;
            _type: 'carouselSection';
            arrows: boolean | null;
            autoplay: boolean | null;
            title: string | null;
            loop: boolean | null;
            pagination: boolean | null;
            slides: Array<{
              _key: string;
              image: {
                _type: 'image';
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                altText: string | null;
                _ref: string | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
              } | null;
            }> | null;
            slidesPerViewDesktop: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionListSection';
            collections: Array<{
              store: {
                gid: string | null;
              } | null;
            }> | null;
            desktopColumns: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'featuredCollectionSection';
            collection: {
              store: {
                gid: string | null;
                slug: Slug | null;
                title: string | null;
              } | null;
            } | null;
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
            viewAll: boolean | null;
          }
        | {
            _key: string;
            _type: 'featuredProductSection';
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            product: {
              store: {
                descriptionHtml: string | null;
                firstVariant: {
                  store: {
                    gid: string | null;
                    previewImageUrl: string | null;
                    price: number | null;
                  } | null;
                } | null;
                gid: string | null;
                options: Array<{
                  name: string | null;
                  values: Array<string> | null;
                }> | null;
                previewImageUrl: string | null;
                title: string | null;
              } | null;
            } | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'imageBannerSection';
            backgroundImage: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
            bannerHeight: number | null;
            content: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                  listItem?: never;
                  markDefs: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'richtextSection';
            contentAlignment: 'center' | 'left' | 'right' | null;
            desktopContentPosition: 'center' | 'left' | 'right' | null;
            maxWidth: number | null;
            richtext: Array<
              | {
                  asset: {
                    _ref: string;
                    _type: 'reference';
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  } | null;
                  media?: unknown;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  maxWidth?: RangeSlider;
                  alignment?: 'center' | 'left' | 'right';
                  _type: 'image';
                  _key: string;
                  altText: string | null;
                  _ref: string | null;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
      > | null;
      seo: {
        title: string | null;
        description: string | null;
        image: {
          _type: 'image';
          asset: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
          } | null;
          altText: string | null;
          _ref: string | null;
          hotspot: SanityImageHotspot | null;
          crop: SanityImageCrop | null;
        } | null;
      } | null;
    }
  | {
      _type: 'page';
      sections: Array<
        | {
            _key: string;
            _type: 'carouselSection';
            arrows: boolean | null;
            autoplay: boolean | null;
            title: string | null;
            loop: boolean | null;
            pagination: boolean | null;
            slides: Array<{
              _key: string;
              image: {
                _type: 'image';
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                altText: string | null;
                _ref: string | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
              } | null;
            }> | null;
            slidesPerViewDesktop: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionListSection';
            collections: Array<{
              store: {
                gid: string | null;
              } | null;
            }> | null;
            desktopColumns: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'featuredCollectionSection';
            collection: {
              store: {
                gid: string | null;
                slug: Slug | null;
                title: string | null;
              } | null;
            } | null;
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
            viewAll: boolean | null;
          }
        | {
            _key: string;
            _type: 'featuredProductSection';
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            product: {
              store: {
                descriptionHtml: string | null;
                firstVariant: {
                  store: {
                    gid: string | null;
                    previewImageUrl: string | null;
                    price: number | null;
                  } | null;
                } | null;
                gid: string | null;
                options: Array<{
                  name: string | null;
                  values: Array<string> | null;
                }> | null;
                previewImageUrl: string | null;
                title: string | null;
              } | null;
            } | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'imageBannerSection';
            backgroundImage: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
            bannerHeight: number | null;
            content: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                  listItem?: never;
                  markDefs: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'richtextSection';
            contentAlignment: 'center' | 'left' | 'right' | null;
            desktopContentPosition: 'center' | 'left' | 'right' | null;
            maxWidth: number | null;
            richtext: Array<
              | {
                  asset: {
                    _ref: string;
                    _type: 'reference';
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  } | null;
                  media?: unknown;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  maxWidth?: RangeSlider;
                  alignment?: 'center' | 'left' | 'right';
                  _type: 'image';
                  _key: string;
                  altText: string | null;
                  _ref: string | null;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
      > | null;
      seo: {
        title: string | null;
        description: string | null;
        image: {
          _type: 'image';
          asset: {
            _ref: string;
            _type: 'reference';
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
          } | null;
          altText: string | null;
          _ref: string | null;
          hotspot: SanityImageHotspot | null;
          crop: SanityImageCrop | null;
        } | null;
      } | null;
    }
  | null;
// Variable: PRODUCT_QUERY
// Query: {  "_type": "product",  'product': *[_type == "product" && store.slug.current == $productHandle][0] {    store {      gid,    },    template -> {      sections[] {        _key,        _type,            _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},              _type == 'productInformationSection' => {  _key,  _type,  desktopMediaPosition,  desktopMediaWidth,  mediaAspectRatio,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'relatedProductsSection' => {  _key,  _type,  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},        },    },  },  "defaultProductTemplate": *[_type == 'productTemplate' && default == true][0] {    _type,    name,    sections[] {      _key,      _type,          _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},            _type == 'productInformationSection' => {  _key,  _type,  desktopMediaPosition,  desktopMediaWidth,  mediaAspectRatio,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'relatedProductsSection' => {  _key,  _type,  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},      },  },}
export type PRODUCT_QUERYResult = {
  _type: 'product';
  product: {
    store: {
      gid: string | null;
    } | null;
    template: {
      sections: Array<
        | {
            _key: string;
            _type: 'carouselSection';
            arrows: boolean | null;
            autoplay: boolean | null;
            title: string | null;
            loop: boolean | null;
            pagination: boolean | null;
            slides: Array<{
              _key: string;
              image: {
                _type: 'image';
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                altText: string | null;
                _ref: string | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
              } | null;
            }> | null;
            slidesPerViewDesktop: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionListSection';
            collections: Array<{
              store: {
                gid: string | null;
              } | null;
            }> | null;
            desktopColumns: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'featuredCollectionSection';
            collection: {
              store: {
                gid: string | null;
                slug: Slug | null;
                title: string | null;
              } | null;
            } | null;
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
            viewAll: boolean | null;
          }
        | {
            _key: string;
            _type: 'featuredProductSection';
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            product: {
              store: {
                descriptionHtml: string | null;
                firstVariant: {
                  store: {
                    gid: string | null;
                    previewImageUrl: string | null;
                    price: number | null;
                  } | null;
                } | null;
                gid: string | null;
                options: Array<{
                  name: string | null;
                  values: Array<string> | null;
                }> | null;
                previewImageUrl: string | null;
                title: string | null;
              } | null;
            } | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'imageBannerSection';
            backgroundImage: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
            bannerHeight: number | null;
            content: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                  listItem?: never;
                  markDefs: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'productInformationSection';
            desktopMediaPosition: 'left' | 'right' | null;
            desktopMediaWidth: 'large' | 'medium' | 'small' | null;
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'relatedProductsSection';
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'richtextSection';
            contentAlignment: 'center' | 'left' | 'right' | null;
            desktopContentPosition: 'center' | 'left' | 'right' | null;
            maxWidth: number | null;
            richtext: Array<
              | {
                  asset: {
                    _ref: string;
                    _type: 'reference';
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  } | null;
                  media?: unknown;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  maxWidth?: RangeSlider;
                  alignment?: 'center' | 'left' | 'right';
                  _type: 'image';
                  _key: string;
                  altText: string | null;
                  _ref: string | null;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
      > | null;
    } | null;
  } | null;
  defaultProductTemplate: {
    _type: 'productTemplate';
    name: string | null;
    sections: Array<
      | {
          _key: string;
          _type: 'carouselSection';
          arrows: boolean | null;
          autoplay: boolean | null;
          title: string | null;
          loop: boolean | null;
          pagination: boolean | null;
          slides: Array<{
            _key: string;
            image: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
          }> | null;
          slidesPerViewDesktop: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'collectionListSection';
          collections: Array<{
            store: {
              gid: string | null;
            } | null;
          }> | null;
          desktopColumns: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'featuredCollectionSection';
          collection: {
            store: {
              gid: string | null;
              slug: Slug | null;
              title: string | null;
            } | null;
          } | null;
          desktopColumns: number | null;
          heading: string | null;
          maxProducts: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
          viewAll: boolean | null;
        }
      | {
          _key: string;
          _type: 'featuredProductSection';
          mediaAspectRatio: 'auto' | 'square' | 'video' | null;
          product: {
            store: {
              descriptionHtml: string | null;
              firstVariant: {
                store: {
                  gid: string | null;
                  previewImageUrl: string | null;
                  price: number | null;
                } | null;
              } | null;
              gid: string | null;
              options: Array<{
                name: string | null;
                values: Array<string> | null;
              }> | null;
              previewImageUrl: string | null;
              title: string | null;
            } | null;
          } | null;
          richtext: Array<
            | {
                quantitySelector?: boolean;
                shopPayButton?: boolean;
                _type: 'addToCartButton';
                _key: string;
              }
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?:
                  | 'blockquote'
                  | 'h1'
                  | 'h2'
                  | 'h3'
                  | 'h4'
                  | 'h5'
                  | 'h6'
                  | 'normal';
                listItem?: 'bullet' | 'number';
                markDefs: Array<
                  | {
                      link: string | null;
                      openInNewTab: boolean | null;
                      _type: 'externalLink';
                      _key: string;
                      name: null;
                    }
                  | {
                      link:
                        | {
                            documentType: 'blogPost';
                            slug: null;
                          }
                        | {
                            documentType: 'collection';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'home';
                            slug: null;
                          }
                        | {
                            documentType: 'page';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'product';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | null;
                      anchor: Anchor | null;
                      _type: 'internalLink';
                      _key: string;
                      name: null;
                    }
                > | null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                priceProxy?: ProxyString;
                _type: 'price';
                _key: string;
              }
            | {
                descriptionProxy?: ProxyString;
                _type: 'shopifyDescription';
                _key: string;
              }
            | {
                titleProxy?: ProxyString;
                _type: 'shopifyTitle';
                _key: string;
              }
          > | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'imageBannerSection';
          backgroundImage: {
            _type: 'image';
            asset: {
              _ref: string;
              _type: 'reference';
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
            } | null;
            altText: string | null;
            _ref: string | null;
            hotspot: SanityImageHotspot | null;
            crop: SanityImageCrop | null;
          } | null;
          bannerHeight: number | null;
          content: Array<
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                listItem?: never;
                markDefs: null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                _key: string;
                _type: 'button';
                label?: string;
                link:
                  | {
                      documentType: 'blogPost';
                      slug: null;
                    }
                  | {
                      documentType: 'collection';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'home';
                      slug: null;
                    }
                  | {
                      documentType: 'page';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'product';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | null;
                anchor?: string;
              }
          > | null;
          contentAlignment: 'center' | 'left' | 'right' | null;
          contentPosition:
            | 'bottom_center'
            | 'bottom_left'
            | 'bottom_right'
            | 'middle_center'
            | 'middle_left'
            | 'middle_right'
            | 'top_center'
            | 'top_left'
            | 'top_right'
            | null;
          overlayOpacity: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'productInformationSection';
          desktopMediaPosition: 'left' | 'right' | null;
          desktopMediaWidth: 'large' | 'medium' | 'small' | null;
          mediaAspectRatio: 'auto' | 'square' | 'video' | null;
          richtext: Array<
            | {
                quantitySelector?: boolean;
                shopPayButton?: boolean;
                _type: 'addToCartButton';
                _key: string;
              }
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?:
                  | 'blockquote'
                  | 'h1'
                  | 'h2'
                  | 'h3'
                  | 'h4'
                  | 'h5'
                  | 'h6'
                  | 'normal';
                listItem?: 'bullet' | 'number';
                markDefs: Array<
                  | {
                      link: string | null;
                      openInNewTab: boolean | null;
                      _type: 'externalLink';
                      _key: string;
                      name: null;
                    }
                  | {
                      link:
                        | {
                            documentType: 'blogPost';
                            slug: null;
                          }
                        | {
                            documentType: 'collection';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'home';
                            slug: null;
                          }
                        | {
                            documentType: 'page';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'product';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | null;
                      anchor: Anchor | null;
                      _type: 'internalLink';
                      _key: string;
                      name: null;
                    }
                > | null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                priceProxy?: ProxyString;
                _type: 'price';
                _key: string;
              }
            | {
                descriptionProxy?: ProxyString;
                _type: 'shopifyDescription';
                _key: string;
              }
            | {
                titleProxy?: ProxyString;
                _type: 'shopifyTitle';
                _key: string;
              }
          > | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'relatedProductsSection';
          desktopColumns: number | null;
          heading: string | null;
          maxProducts: number | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
      | {
          _key: string;
          _type: 'richtextSection';
          contentAlignment: 'center' | 'left' | 'right' | null;
          desktopContentPosition: 'center' | 'left' | 'right' | null;
          maxWidth: number | null;
          richtext: Array<
            | {
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                media?: unknown;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
                maxWidth?: RangeSlider;
                alignment?: 'center' | 'left' | 'right';
                _type: 'image';
                _key: string;
                altText: string | null;
                _ref: string | null;
              }
            | {
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: 'span';
                  _key: string;
                }>;
                style?:
                  | 'blockquote'
                  | 'h1'
                  | 'h2'
                  | 'h3'
                  | 'h4'
                  | 'h5'
                  | 'h6'
                  | 'normal';
                listItem?: 'bullet' | 'number';
                markDefs: Array<
                  | {
                      link: string | null;
                      openInNewTab: boolean | null;
                      _type: 'externalLink';
                      _key: string;
                      name: null;
                    }
                  | {
                      link:
                        | {
                            documentType: 'blogPost';
                            slug: null;
                          }
                        | {
                            documentType: 'collection';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'home';
                            slug: null;
                          }
                        | {
                            documentType: 'page';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | {
                            documentType: 'product';
                            slug: {
                              _type: 'slug';
                              current: string | null;
                            } | null;
                          }
                        | null;
                      anchor: Anchor | null;
                      _type: 'internalLink';
                      _key: string;
                      name: null;
                    }
                > | null;
                level?: number;
                _type: 'block';
                _key: string;
              }
            | {
                _key: string;
                _type: 'button';
                label?: string;
                link:
                  | {
                      documentType: 'blogPost';
                      slug: null;
                    }
                  | {
                      documentType: 'collection';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'home';
                      slug: null;
                    }
                  | {
                      documentType: 'page';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | {
                      documentType: 'product';
                      slug: {
                        _type: 'slug';
                        current: string | null;
                      } | null;
                    }
                  | null;
                anchor?: string;
              }
          > | null;
          settings: {
            colorScheme: {
              background: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              border: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              card: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              cardForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              foreground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primary: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
              primaryForeground: {
                alpha: null;
                hex: string | null;
                hsl: {
                  h?: number;
                  s?: number;
                  l?: number;
                } | null;
                rgb: {
                  r?: number;
                  g?: number;
                  b?: number;
                } | null;
              } | null;
            } | null;
            customCss: Code | null;
            hide: boolean | null;
            padding: Padding | null;
          } | null;
        }
    > | null;
  } | null;
};
// Variable: ALL_SECTIONS_QUERY
// Query: *[][0] {  sections[] {    _key,    _type,        _type == 'richtextSection' => {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'carouselSection' => {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionListSection' => {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredProductSection' => {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'featuredCollectionSection' => {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll},    _type == 'imageBannerSection' => {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},          _type == 'productInformationSection' => {  _key,  _type,  desktopMediaPosition,  desktopMediaWidth,  mediaAspectRatio,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'relatedProductsSection' => {  _key,  _type,  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},          _type == 'collectionBannerSection' => {  _key,  _type,  bannerHeight,  contentAlignment,  contentPosition,  overlayOpacity,  showDescription,  showImage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    _type == 'collectionProductGridSection' => {  _key,  _type,  desktopColumns,  enableFiltering,  enableSorting,  mobileColumns,  productsPerPage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}},    },  footers[] {    _key,    _type,        _type == 'socialLinksOnly' => {  _key,  _type,  "copyright": coalesce(    copyright[_key == $language][0].value,    copyright[_key == $defaultLanguage][0].value,  ),  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},},    },}
export type ALL_SECTIONS_QUERYResult =
  | {
      sections: null;
      footers: null;
    }
  | {
      sections: Array<
        | {
            _key: string;
            _type: 'carouselSection';
            arrows: boolean | null;
            autoplay: boolean | null;
            title: string | null;
            loop: boolean | null;
            pagination: boolean | null;
            slides: Array<{
              _key: string;
              image: {
                _type: 'image';
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                altText: string | null;
                _ref: string | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
              } | null;
            }> | null;
            slidesPerViewDesktop: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionBannerSection';
            bannerHeight: number | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            showDescription: boolean | null;
            showImage: boolean | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionListSection';
            collections: Array<{
              store: {
                gid: string | null;
              } | null;
            }> | null;
            desktopColumns: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionProductGridSection';
            desktopColumns: number | null;
            enableFiltering: boolean | null;
            enableSorting: boolean | null;
            mobileColumns: number | null;
            productsPerPage: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'featuredCollectionSection';
            collection: {
              store: {
                gid: string | null;
                slug: Slug | null;
                title: string | null;
              } | null;
            } | null;
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
            viewAll: boolean | null;
          }
        | {
            _key: string;
            _type: 'featuredProductSection';
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            product: {
              store: {
                descriptionHtml: string | null;
                firstVariant: {
                  store: {
                    gid: string | null;
                    previewImageUrl: string | null;
                    price: number | null;
                  } | null;
                } | null;
                gid: string | null;
                options: Array<{
                  name: string | null;
                  values: Array<string> | null;
                }> | null;
                previewImageUrl: string | null;
                title: string | null;
              } | null;
            } | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'imageBannerSection';
            backgroundImage: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
            bannerHeight: number | null;
            content: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                  listItem?: never;
                  markDefs: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'richtextSection';
            contentAlignment: 'center' | 'left' | 'right' | null;
            desktopContentPosition: 'center' | 'left' | 'right' | null;
            maxWidth: number | null;
            richtext: Array<
              | {
                  asset: {
                    _ref: string;
                    _type: 'reference';
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  } | null;
                  media?: unknown;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  maxWidth?: RangeSlider;
                  alignment?: 'center' | 'left' | 'right';
                  _type: 'image';
                  _key: string;
                  altText: string | null;
                  _ref: string | null;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
      > | null;
      footers: null;
    }
  | {
      sections: Array<
        | {
            _key: string;
            _type: 'carouselSection';
            arrows: boolean | null;
            autoplay: boolean | null;
            title: string | null;
            loop: boolean | null;
            pagination: boolean | null;
            slides: Array<{
              _key: string;
              image: {
                _type: 'image';
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                altText: string | null;
                _ref: string | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
              } | null;
            }> | null;
            slidesPerViewDesktop: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionListSection';
            collections: Array<{
              store: {
                gid: string | null;
              } | null;
            }> | null;
            desktopColumns: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'featuredCollectionSection';
            collection: {
              store: {
                gid: string | null;
                slug: Slug | null;
                title: string | null;
              } | null;
            } | null;
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
            viewAll: boolean | null;
          }
        | {
            _key: string;
            _type: 'featuredProductSection';
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            product: {
              store: {
                descriptionHtml: string | null;
                firstVariant: {
                  store: {
                    gid: string | null;
                    previewImageUrl: string | null;
                    price: number | null;
                  } | null;
                } | null;
                gid: string | null;
                options: Array<{
                  name: string | null;
                  values: Array<string> | null;
                }> | null;
                previewImageUrl: string | null;
                title: string | null;
              } | null;
            } | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'imageBannerSection';
            backgroundImage: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
            bannerHeight: number | null;
            content: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                  listItem?: never;
                  markDefs: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'productInformationSection';
            desktopMediaPosition: 'left' | 'right' | null;
            desktopMediaWidth: 'large' | 'medium' | 'small' | null;
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'relatedProductsSection';
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'richtextSection';
            contentAlignment: 'center' | 'left' | 'right' | null;
            desktopContentPosition: 'center' | 'left' | 'right' | null;
            maxWidth: number | null;
            richtext: Array<
              | {
                  asset: {
                    _ref: string;
                    _type: 'reference';
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  } | null;
                  media?: unknown;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  maxWidth?: RangeSlider;
                  alignment?: 'center' | 'left' | 'right';
                  _type: 'image';
                  _key: string;
                  altText: string | null;
                  _ref: string | null;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
      > | null;
      footers: null;
    }
  | {
      sections: Array<
        | {
            _key: string;
            _type: 'carouselSection';
            arrows: boolean | null;
            autoplay: boolean | null;
            title: string | null;
            loop: boolean | null;
            pagination: boolean | null;
            slides: Array<{
              _key: string;
              image: {
                _type: 'image';
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                altText: string | null;
                _ref: string | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
              } | null;
            }> | null;
            slidesPerViewDesktop: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionListSection';
            collections: Array<{
              store: {
                gid: string | null;
              } | null;
            }> | null;
            desktopColumns: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'featuredCollectionSection';
            collection: {
              store: {
                gid: string | null;
                slug: Slug | null;
                title: string | null;
              } | null;
            } | null;
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
            viewAll: boolean | null;
          }
        | {
            _key: string;
            _type: 'featuredProductSection';
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            product: {
              store: {
                descriptionHtml: string | null;
                firstVariant: {
                  store: {
                    gid: string | null;
                    previewImageUrl: string | null;
                    price: number | null;
                  } | null;
                } | null;
                gid: string | null;
                options: Array<{
                  name: string | null;
                  values: Array<string> | null;
                }> | null;
                previewImageUrl: string | null;
                title: string | null;
              } | null;
            } | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'imageBannerSection';
            backgroundImage: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
            bannerHeight: number | null;
            content: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                  listItem?: never;
                  markDefs: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'richtextSection';
            contentAlignment: 'center' | 'left' | 'right' | null;
            desktopContentPosition: 'center' | 'left' | 'right' | null;
            maxWidth: number | null;
            richtext: Array<
              | {
                  asset: {
                    _ref: string;
                    _type: 'reference';
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  } | null;
                  media?: unknown;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  maxWidth?: RangeSlider;
                  alignment?: 'center' | 'left' | 'right';
                  _type: 'image';
                  _key: string;
                  altText: string | null;
                  _ref: string | null;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
      > | null;
      footers: null;
    }
  | {
      sections: Array<
        | {
            _key: string;
            _type: 'carouselSection';
            arrows: boolean | null;
            autoplay: boolean | null;
            title: string | null;
            loop: boolean | null;
            pagination: boolean | null;
            slides: Array<{
              _key: string;
              image: {
                _type: 'image';
                asset: {
                  _ref: string;
                  _type: 'reference';
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                } | null;
                altText: string | null;
                _ref: string | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
              } | null;
            }> | null;
            slidesPerViewDesktop: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'collectionListSection';
            collections: Array<{
              store: {
                gid: string | null;
              } | null;
            }> | null;
            desktopColumns: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'featuredCollectionSection';
            collection: {
              store: {
                gid: string | null;
                slug: Slug | null;
                title: string | null;
              } | null;
            } | null;
            desktopColumns: number | null;
            heading: string | null;
            maxProducts: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
            viewAll: boolean | null;
          }
        | {
            _key: string;
            _type: 'featuredProductSection';
            mediaAspectRatio: 'auto' | 'square' | 'video' | null;
            product: {
              store: {
                descriptionHtml: string | null;
                firstVariant: {
                  store: {
                    gid: string | null;
                    previewImageUrl: string | null;
                    price: number | null;
                  } | null;
                } | null;
                gid: string | null;
                options: Array<{
                  name: string | null;
                  values: Array<string> | null;
                }> | null;
                previewImageUrl: string | null;
                title: string | null;
              } | null;
            } | null;
            richtext: Array<
              | {
                  quantitySelector?: boolean;
                  shopPayButton?: boolean;
                  _type: 'addToCartButton';
                  _key: string;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  priceProxy?: ProxyString;
                  _type: 'price';
                  _key: string;
                }
              | {
                  descriptionProxy?: ProxyString;
                  _type: 'shopifyDescription';
                  _key: string;
                }
              | {
                  titleProxy?: ProxyString;
                  _type: 'shopifyTitle';
                  _key: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'imageBannerSection';
            backgroundImage: {
              _type: 'image';
              asset: {
                _ref: string;
                _type: 'reference';
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
              } | null;
              altText: string | null;
              _ref: string | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
            } | null;
            bannerHeight: number | null;
            content: Array<
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
                  listItem?: never;
                  markDefs: null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            contentAlignment: 'center' | 'left' | 'right' | null;
            contentPosition:
              | 'bottom_center'
              | 'bottom_left'
              | 'bottom_right'
              | 'middle_center'
              | 'middle_left'
              | 'middle_right'
              | 'top_center'
              | 'top_left'
              | 'top_right'
              | null;
            overlayOpacity: number | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
        | {
            _key: string;
            _type: 'richtextSection';
            contentAlignment: 'center' | 'left' | 'right' | null;
            desktopContentPosition: 'center' | 'left' | 'right' | null;
            maxWidth: number | null;
            richtext: Array<
              | {
                  asset: {
                    _ref: string;
                    _type: 'reference';
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
                  } | null;
                  media?: unknown;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  maxWidth?: RangeSlider;
                  alignment?: 'center' | 'left' | 'right';
                  _type: 'image';
                  _key: string;
                  altText: string | null;
                  _ref: string | null;
                }
              | {
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: 'span';
                    _key: string;
                  }>;
                  style?:
                    | 'blockquote'
                    | 'h1'
                    | 'h2'
                    | 'h3'
                    | 'h4'
                    | 'h5'
                    | 'h6'
                    | 'normal';
                  listItem?: 'bullet' | 'number';
                  markDefs: Array<
                    | {
                        link: string | null;
                        openInNewTab: boolean | null;
                        _type: 'externalLink';
                        _key: string;
                        name: null;
                      }
                    | {
                        link:
                          | {
                              documentType: 'blogPost';
                              slug: null;
                            }
                          | {
                              documentType: 'collection';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'home';
                              slug: null;
                            }
                          | {
                              documentType: 'page';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | {
                              documentType: 'product';
                              slug: {
                                _type: 'slug';
                                current: string | null;
                              } | null;
                            }
                          | null;
                        anchor: Anchor | null;
                        _type: 'internalLink';
                        _key: string;
                        name: null;
                      }
                  > | null;
                  level?: number;
                  _type: 'block';
                  _key: string;
                }
              | {
                  _key: string;
                  _type: 'button';
                  label?: string;
                  link:
                    | {
                        documentType: 'blogPost';
                        slug: null;
                      }
                    | {
                        documentType: 'collection';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'home';
                        slug: null;
                      }
                    | {
                        documentType: 'page';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | {
                        documentType: 'product';
                        slug: {
                          _type: 'slug';
                          current: string | null;
                        } | null;
                      }
                    | null;
                  anchor?: string;
                }
            > | null;
            settings: {
              colorScheme: {
                background: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                border: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                card: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                cardForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                foreground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primary: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
                primaryForeground: {
                  alpha: null;
                  hex: string | null;
                  hsl: {
                    h?: number;
                    s?: number;
                    l?: number;
                  } | null;
                  rgb: {
                    r?: number;
                    g?: number;
                    b?: number;
                  } | null;
                } | null;
              } | null;
              customCss: Code | null;
              hide: boolean | null;
              padding: Padding | null;
            } | null;
          }
      > | null;
      footers: Array<{
        _key: string;
        _type: 'socialLinksOnly';
        copyright: string | null;
        settings: {
          colorScheme: {
            background: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            border: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            card: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            cardForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            foreground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primary: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
            primaryForeground: {
              alpha: null;
              hex: string | null;
              hsl: {
                h?: number;
                s?: number;
                l?: number;
              } | null;
              rgb: {
                r?: number;
                g?: number;
                b?: number;
              } | null;
            } | null;
          } | null;
          customCss: Code | null;
          hide: boolean | null;
          padding: Padding | null;
        } | null;
      }> | null;
    }
  | null;

// Source: ./app/data/sanity/sections.ts
// Variable: SECTION_SETTINGS_FRAGMENT
// Query: {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}
export type SECTION_SETTINGS_FRAGMENTResult = {
  colorScheme: never;
  customCss: never;
  hide: never;
  padding: never;
};
// Variable: RELATED_PRODUCTS_SECTION_FRAGMENT
// Query: {  _key,  _type,  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type RELATED_PRODUCTS_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  desktopColumns: never;
  heading: null;
  maxProducts: never;
  settings: never;
};
// Variable: PRODUCT_INFORMATION_SECTION_FRAGMENT
// Query: {  _key,  _type,  desktopMediaPosition,  desktopMediaWidth,  mediaAspectRatio,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type PRODUCT_INFORMATION_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  desktopMediaPosition: never;
  desktopMediaWidth: never;
  mediaAspectRatio: never;
  richtext: null;
  settings: never;
};
// Variable: COLLECTION_PRODUCT_GRID_SECTION_FRAGMENT
// Query: {  _key,  _type,  desktopColumns,  enableFiltering,  enableSorting,  mobileColumns,  productsPerPage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type COLLECTION_PRODUCT_GRID_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  desktopColumns: never;
  enableFiltering: never;
  enableSorting: never;
  mobileColumns: never;
  productsPerPage: never;
  settings: never;
};
// Variable: COLLECTION_BANNER_SECTION_FRAGMENT
// Query: {  _key,  _type,  bannerHeight,  contentAlignment,  contentPosition,  overlayOpacity,  showDescription,  showImage,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type COLLECTION_BANNER_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  bannerHeight: never;
  contentAlignment: never;
  contentPosition: never;
  overlayOpacity: never;
  showDescription: never;
  showImage: never;
  settings: never;
};
// Variable: RICHTEXT_SECTION_FRAGMENT
// Query: {  _key,  _type,  contentAlignment,  desktopContentPosition,  maxWidth,  "richtext": coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type RICHTEXT_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  contentAlignment: never;
  desktopContentPosition: never;
  maxWidth: never;
  richtext: null;
  settings: never;
};
// Variable: CAROUSEL_SECTION_FRAGMENT
// Query: {  _key,  _type,  arrows,  autoplay,  "title": coalesce(    title[_key == $language][0].value,    title[_key == $defaultLanguage][0].value,  ),  loop,  pagination,  slides[] {    _key,    image {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  },  slidesPerViewDesktop,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type CAROUSEL_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  arrows: never;
  autoplay: never;
  title: null;
  loop: never;
  pagination: never;
  slides: never;
  slidesPerViewDesktop: never;
  settings: never;
};
// Variable: COLLECTION_LIST_SECTION_FRAGMENT
// Query: {  _key,  _type,  collections[] -> {    store {      gid    }  },  desktopColumns,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type COLLECTION_LIST_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  collections: never;
  desktopColumns: never;
  settings: never;
};
// Variable: FEATURED_PRODUCT_SECTION_FRAGMENT
// Query: {  _key,  _type,  mediaAspectRatio,  product -> {    store {      descriptionHtml,      "firstVariant": variants[0] -> {        store {          gid,          previewImageUrl,          price        }      },      gid,      options[] {        name,        values      },      previewImageUrl,      title    }  },  'richtext': coalesce(    richtext[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    richtext[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type FEATURED_PRODUCT_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  mediaAspectRatio: never;
  product: never;
  richtext: null;
  settings: never;
};
// Variable: FEATURED_COLLECTION_SECTION_FRAGMENT
// Query: {  _key,  _type,  collection -> {    store {      gid,      slug,      title    }  },  desktopColumns,  "heading": coalesce(    heading[_key == $language][0].value,    heading[_key == $defaultLanguage][0].value,  ),  maxProducts,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding},  viewAll}
export type FEATURED_COLLECTION_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  collection: never;
  desktopColumns: never;
  heading: null;
  maxProducts: never;
  settings: never;
  viewAll: never;
};
// Variable: IMAGE_BANNER_SECTION_FRAGMENT
// Query: {  _key,  _type,  backgroundImage {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  bannerHeight,  "content": coalesce(    content[_key == $language][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},    content[_key == $defaultLanguage][0].value[] {  ...,  _type == 'image' => {  _type,  asset,  "altText": asset -> altText,  "_ref": asset._ref,  hotspot,  crop,},  _type == 'button' => {    ...,    link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  },  _type == 'block' => {    ...,    markDefs[] {      ...,      _type == 'internalLink' => {  _key,  _type,  anchor,  link -> {  'documentType': _type,  'slug': coalesce(    slug,    store.slug  ) {    _type,    current  },},  name,},      _type == 'externalLink' => {  _key,  _type,  link,  name,  openInNewTab,},    }  }},  )[],  contentAlignment,  contentPosition,  overlayOpacity,  settings {  colorScheme -> {  background {  alpha,  hex,  hsl,  rgb,},  border {  alpha,  hex,  hsl,  rgb,},  card {  alpha,  hex,  hsl,  rgb,},  cardForeground {  alpha,  hex,  hsl,  rgb,},  foreground {  alpha,  hex,  hsl,  rgb,},  primary {  alpha,  hex,  hsl,  rgb,},  primaryForeground {  alpha,  hex,  hsl,  rgb,},},  customCss,  hide,  padding}}
export type IMAGE_BANNER_SECTION_FRAGMENTResult = {
  _key: never;
  _type: never;
  backgroundImage: never;
  bannerHeight: never;
  content: null;
  contentAlignment: never;
  contentPosition: never;
  overlayOpacity: never;
  settings: never;
};

// Query TypeMap
import '@sanity/client';
declare module '@sanity/client' {
  interface SanityQueries {
    '{\n  _key,\n  _type,\n  "copyright": coalesce(\n    copyright[_key == $language][0].value,\n    copyright[_key == $defaultLanguage][0].value,\n  ),\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n}': FOOTER_SOCIAL_LINKS_ONLY_FRAGMENTResult;
    '{\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n}': IMAGE_FRAGMENTResult;
    '{\n  alpha,\n  hex,\n  hsl,\n  rgb,\n}': COLOR_FRAGMENTResult;
    '{\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n}': COLOR_SCHEME_FRAGMENTResult;
    '{\n  account {\n    "accountDetails": coalesce(\n    accountDetails[_key == $language][0].value,\n    accountDetails[_key == $defaultLanguage][0].value,\n  ),\n    "addAddress": coalesce(\n    addAddress[_key == $language][0].value,\n    addAddress[_key == $defaultLanguage][0].value,\n  ),\n    "addName": coalesce(\n    addName[_key == $language][0].value,\n    addName[_key == $defaultLanguage][0].value,\n  ),\n    "addressBook": coalesce(\n    addressBook[_key == $language][0].value,\n    addressBook[_key == $defaultLanguage][0].value,\n  ),\n    "addressLine1": coalesce(\n    addressLine1[_key == $language][0].value,\n    addressLine1[_key == $defaultLanguage][0].value,\n  ),\n    "addressLine2": coalesce(\n    addressLine2[_key == $language][0].value,\n    addressLine2[_key == $defaultLanguage][0].value,\n  ),\n    "cancel": coalesce(\n    cancel[_key == $language][0].value,\n    cancel[_key == $defaultLanguage][0].value,\n  ),\n    "city": coalesce(\n    city[_key == $language][0].value,\n    city[_key == $defaultLanguage][0].value,\n  ), \n    "company": coalesce(\n    company[_key == $language][0].value,\n    company[_key == $defaultLanguage][0].value,\n  ),\n    "country": coalesce(\n    country[_key == $language][0].value,\n    country[_key == $defaultLanguage][0].value,\n  ),\n    "default": coalesce(\n    default[_key == $language][0].value,\n    default[_key == $defaultLanguage][0].value,\n  ),\n    "defaultAddress": coalesce(\n    defaultAddress[_key == $language][0].value,\n    defaultAddress[_key == $defaultLanguage][0].value,\n  ),\n    "discounts": coalesce(\n    discounts[_key == $language][0].value,\n    discounts[_key == $defaultLanguage][0].value,\n  ),\n    "discountsOff": coalesce(\n    discountsOff[_key == $language][0].value,\n    discountsOff[_key == $defaultLanguage][0].value,\n  ),\n    "edit": coalesce(\n    edit[_key == $language][0].value,\n    edit[_key == $defaultLanguage][0].value,\n  ),\n    "editAddress": coalesce(\n    editAddress[_key == $language][0].value,\n    editAddress[_key == $defaultLanguage][0].value,\n  ),\n    "emailAddress": coalesce(\n    emailAddress[_key == $language][0].value,\n    emailAddress[_key == $defaultLanguage][0].value,\n  ),\n    "firstName": coalesce(\n    firstName[_key == $language][0].value,\n    firstName[_key == $defaultLanguage][0].value,\n  ),\n    "fulfillmentStatus": coalesce(\n    fulfillmentStatus[_key == $language][0].value,\n    fulfillmentStatus[_key == $defaultLanguage][0].value,\n  ),\n    "lastName": coalesce(\n    lastName[_key == $language][0].value,\n    lastName[_key == $defaultLanguage][0].value,\n  ),\n    "name": coalesce(\n    name[_key == $language][0].value,\n    name[_key == $defaultLanguage][0].value,\n  ),\n    "noAddress": coalesce(\n    noAddress[_key == $language][0].value,\n    noAddress[_key == $defaultLanguage][0].value,\n  ),\n    "noOrdersMessage": coalesce(\n    noOrdersMessage[_key == $language][0].value,\n    noOrdersMessage[_key == $defaultLanguage][0].value,\n  ),\n    "noShippingAddress": coalesce(\n    noShippingAddress[_key == $language][0].value,\n    noShippingAddress[_key == $defaultLanguage][0].value,\n  ),\n    "orderDate": coalesce(\n    orderDate[_key == $language][0].value,\n    orderDate[_key == $defaultLanguage][0].value,\n  ),\n    "orderDetail": coalesce(\n    orderDetail[_key == $language][0].value,\n    orderDetail[_key == $defaultLanguage][0].value,\n  ),\n    "orderHistory": coalesce(\n    orderHistory[_key == $language][0].value,\n    orderHistory[_key == $defaultLanguage][0].value,\n  ),\n    "orderId": coalesce(\n    orderId[_key == $language][0].value,\n    orderId[_key == $defaultLanguage][0].value,\n  ),\n    "orderNumber": coalesce(\n    orderNumber[_key == $language][0].value,\n    orderNumber[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusCancelled": coalesce(\n    orderStatusCancelled[_key == $language][0].value,\n    orderStatusCancelled[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusError": coalesce(\n    orderStatusError[_key == $language][0].value,\n    orderStatusError[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusFailure": coalesce(\n    orderStatusFailure[_key == $language][0].value,\n    orderStatusFailure[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusOpen": coalesce(\n    orderStatusOpen[_key == $language][0].value,\n    orderStatusOpen[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusPending": coalesce(\n    orderStatusPending[_key == $language][0].value,\n    orderStatusPending[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusSuccess": coalesce(\n    orderStatusSuccess[_key == $language][0].value,\n    orderStatusSuccess[_key == $defaultLanguage][0].value,\n  ),\n    "phone": coalesce(\n    phone[_key == $language][0].value,\n    phone[_key == $defaultLanguage][0].value,\n  ),\n    "phoneNumber": coalesce(\n    phoneNumber[_key == $language][0].value,\n    phoneNumber[_key == $defaultLanguage][0].value,\n  ),\n    "placedOn": coalesce(\n    placedOn[_key == $language][0].value,\n    placedOn[_key == $defaultLanguage][0].value,\n  ),\n    "postalCode": coalesce(\n    postalCode[_key == $language][0].value,\n    postalCode[_key == $defaultLanguage][0].value,\n  ),\n    "price": coalesce(\n    price[_key == $language][0].value,\n    price[_key == $defaultLanguage][0].value,\n  ),\n    "product": coalesce(\n    product[_key == $language][0].value,\n    product[_key == $defaultLanguage][0].value,\n  ),\n    "profile": coalesce(\n    profile[_key == $language][0].value,\n    profile[_key == $defaultLanguage][0].value,\n  ),\n    "quantity": coalesce(\n    quantity[_key == $language][0].value,\n    quantity[_key == $defaultLanguage][0].value,\n  ),\n    "remove": coalesce(\n    remove[_key == $language][0].value,\n    remove[_key == $defaultLanguage][0].value,\n  ),\n    "returnToAccount": coalesce(\n    returnToAccount[_key == $language][0].value,\n    returnToAccount[_key == $defaultLanguage][0].value,\n  ),\n    "save": coalesce(\n    save[_key == $language][0].value,\n    save[_key == $defaultLanguage][0].value,\n  ),\n    "saving": coalesce(\n    saving[_key == $language][0].value,\n    saving[_key == $defaultLanguage][0].value,\n  ),\n    "shippingAddress": coalesce(\n    shippingAddress[_key == $language][0].value,\n    shippingAddress[_key == $defaultLanguage][0].value,\n  ),\n    "signOut": coalesce(\n    signOut[_key == $language][0].value,\n    signOut[_key == $defaultLanguage][0].value,\n  ),\n    "startShopping": coalesce(\n    startShopping[_key == $language][0].value,\n    startShopping[_key == $defaultLanguage][0].value,\n  ),\n    "stateProvince": coalesce(\n    stateProvince[_key == $language][0].value,\n    stateProvince[_key == $defaultLanguage][0].value,\n  ),\n    "status": coalesce(\n    status[_key == $language][0].value,\n    status[_key == $defaultLanguage][0].value,\n  ),\n    "subtotal": coalesce(\n    subtotal[_key == $language][0].value,\n    subtotal[_key == $defaultLanguage][0].value,\n  ),\n    "tax": coalesce(\n    tax[_key == $language][0].value,\n    tax[_key == $defaultLanguage][0].value,\n  ),\n    "total": coalesce(\n    total[_key == $language][0].value,\n    total[_key == $defaultLanguage][0].value,\n  ),\n    "updateYourProfile": coalesce(\n    updateYourProfile[_key == $language][0].value,\n    updateYourProfile[_key == $defaultLanguage][0].value,\n  ),\n    "viewDetails": coalesce(\n    viewDetails[_key == $language][0].value,\n    viewDetails[_key == $defaultLanguage][0].value,\n  ),\n    "welcome": coalesce(\n    welcome[_key == $language][0].value,\n    welcome[_key == $defaultLanguage][0].value,\n  ),\n    "welcomeToYourAccount": coalesce(\n    welcomeToYourAccount[_key == $language][0].value,\n    welcomeToYourAccount[_key == $defaultLanguage][0].value,\n  ),\n  },\n  cart {\n    "applyDiscount": coalesce(\n    applyDiscount[_key == $language][0].value,\n    applyDiscount[_key == $defaultLanguage][0].value,\n  ),\n    "continueShopping": coalesce(\n    continueShopping[_key == $language][0].value,\n    continueShopping[_key == $defaultLanguage][0].value,\n  ),\n    "discountCode": coalesce(\n    discountCode[_key == $language][0].value,\n    discountCode[_key == $defaultLanguage][0].value,\n  ),\n    "discounts": coalesce(\n    discounts[_key == $language][0].value,\n    discounts[_key == $defaultLanguage][0].value,\n  ),\n    "emptyMessage": coalesce(\n    emptyMessage[_key == $language][0].value,\n    emptyMessage[_key == $defaultLanguage][0].value,\n  ),\n    "heading": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n    "orderSummary": coalesce(\n    orderSummary[_key == $language][0].value,\n    orderSummary[_key == $defaultLanguage][0].value,\n  ),\n    "proceedToCheckout": coalesce(\n    proceedToCheckout[_key == $language][0].value,\n    proceedToCheckout[_key == $defaultLanguage][0].value,\n  ),\n    "quantity": coalesce(\n    quantity[_key == $language][0].value,\n    quantity[_key == $defaultLanguage][0].value,\n  ),\n    "remove": coalesce(\n    remove[_key == $language][0].value,\n    remove[_key == $defaultLanguage][0].value,\n  ),\n    "subtotal": coalesce(\n    subtotal[_key == $language][0].value,\n    subtotal[_key == $defaultLanguage][0].value,\n  ),\n  },\n  collection {\n    "apply": coalesce(\n    apply[_key == $language][0].value,\n    apply[_key == $defaultLanguage][0].value,\n  ),\n    "clear": coalesce(\n    clear[_key == $language][0].value,\n    clear[_key == $defaultLanguage][0].value,\n  ),\n    "clearFilters": coalesce(\n    clearFilters[_key == $language][0].value,\n    clearFilters[_key == $defaultLanguage][0].value,\n  ),\n    "filterAndSort": coalesce(\n    filterAndSort[_key == $language][0].value,\n    filterAndSort[_key == $defaultLanguage][0].value,\n  ),\n    "filterInStock": coalesce(\n    filterInStock[_key == $language][0].value,\n    filterInStock[_key == $defaultLanguage][0].value,\n  ),\n    "filterOutOfStock": coalesce(\n    filterOutOfStock[_key == $language][0].value,\n    filterOutOfStock[_key == $defaultLanguage][0].value,\n  ),\n    "from": coalesce(\n    from[_key == $language][0].value,\n    from[_key == $defaultLanguage][0].value,\n  ),\n    "loading": coalesce(\n    loading[_key == $language][0].value,\n    loading[_key == $defaultLanguage][0].value,\n  ),\n    "loadMoreProducts": coalesce(\n    loadMoreProducts[_key == $language][0].value,\n    loadMoreProducts[_key == $defaultLanguage][0].value,\n  ),\n    "loadPrevious": coalesce(\n    loadPrevious[_key == $language][0].value,\n    loadPrevious[_key == $defaultLanguage][0].value,\n  ),\n    "noCollectionFound": coalesce(\n    noCollectionFound[_key == $language][0].value,\n    noCollectionFound[_key == $defaultLanguage][0].value,\n  ),\n    "noProductFound": coalesce(\n    noProductFound[_key == $language][0].value,\n    noProductFound[_key == $defaultLanguage][0].value,\n  ),\n    "sortBestSelling": coalesce(\n    sortBestSelling[_key == $language][0].value,\n    sortBestSelling[_key == $defaultLanguage][0].value,\n  ),\n    "sortBy": coalesce(\n    sortBy[_key == $language][0].value,\n    sortBy[_key == $defaultLanguage][0].value,\n  ),\n    "sortFeatured": coalesce(\n    sortFeatured[_key == $language][0].value,\n    sortFeatured[_key == $defaultLanguage][0].value,\n  ),\n    "sortHighLow": coalesce(\n    sortHighLow[_key == $language][0].value,\n    sortHighLow[_key == $defaultLanguage][0].value,\n  ),\n    "sortLowHigh": coalesce(\n    sortLowHigh[_key == $language][0].value,\n    sortLowHigh[_key == $defaultLanguage][0].value,\n  ),\n    "sortNewest": coalesce(\n    sortNewest[_key == $language][0].value,\n    sortNewest[_key == $defaultLanguage][0].value,\n  ),\n    "to": coalesce(\n    to[_key == $language][0].value,\n    to[_key == $defaultLanguage][0].value,\n  ), \n    "viewAll": coalesce(\n    viewAll[_key == $language][0].value,\n    viewAll[_key == $defaultLanguage][0].value,\n  ),\n  },\n  error {\n    "addressCreation": coalesce(\n    addressCreation[_key == $language][0].value,\n    addressCreation[_key == $defaultLanguage][0].value,\n  ),\n    "missingAddressId": coalesce(\n    missingAddressId[_key == $language][0].value,\n    missingAddressId[_key == $defaultLanguage][0].value,\n  ),\n    "pageNotFound": coalesce(\n    pageNotFound[_key == $language][0].value,\n    pageNotFound[_key == $defaultLanguage][0].value,\n  ),\n    "reloadPage": coalesce(\n    reloadPage[_key == $language][0].value,\n    reloadPage[_key == $defaultLanguage][0].value,\n  ),\n    "sectionError": coalesce(\n    sectionError[_key == $language][0].value,\n    sectionError[_key == $defaultLanguage][0].value,\n  ),\n    "serverError": coalesce(\n    serverError[_key == $language][0].value,\n    serverError[_key == $defaultLanguage][0].value,\n  ),\n  },\n  product {\n    "addToCart": coalesce(\n    addToCart[_key == $language][0].value,\n    addToCart[_key == $defaultLanguage][0].value,\n  ),\n    "quantitySelector": coalesce(\n    quantitySelector[_key == $language][0].value,\n    quantitySelector[_key == $defaultLanguage][0].value,\n  ),\n    "sale": coalesce(\n    sale[_key == $language][0].value,\n    sale[_key == $defaultLanguage][0].value,\n  ),\n    "soldOut": coalesce(\n    soldOut[_key == $language][0].value,\n    soldOut[_key == $defaultLanguage][0].value,\n  ),\n  },\n}': THEME_CONTENT_FRAGMENTResult;
    '{\n  badgesCornerRadius,\n  badgesPosition,\n  badgesSaleColorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  badgesSoldOutColorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  blogCards,\n  buttonsBorder,\n  buttonsShadow,\n  cartCollection -> {\n    store {\n      gid,\n      title,\n    },\n  },\n  cartColorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  collectionCards,\n  description,\n  dropdownsAndPopupsBorder,\n  dropdownsAndPopupsShadow,\n  facebook,\n  favicon {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  grid,\n  inputsBorder,\n  inputsShadow,\n  instagram,\n  linkedin,\n  logo {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  mediaBorder,\n  mediaShadow,\n  pinterest,\n  productCards,\n  showCurrencyCodes,\n  showTrailingZeros,\n  siteName,\n  snapchat,\n  socialSharingImagePreview {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  spaceBetweenTemplateSections,\n  tiktok,\n  tumblr,\n  twitter,\n  vimeo,\n  youtube,\n}': SETTINGS_FRAGMENTResult;
    '{\n  "announcementBar": coalesce(\n    announcementBar[_key == $language][0].value[],\n    announcementBar[_key == $defaultLanguage][0].value[],\n  )[] {\n    _type == "announcement" => {\n      _key,\n      externalLink,\n      link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n      openInNewTab,\n      text,\n    },\n  },\n  announcementBarColorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  autoRotateAnnouncements,\n  blur,\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  desktopLogoWidth,\n  "menu": coalesce(\n    menu[_key == $language][0].value[],\n    menu[_key == $defaultLanguage][0].value[],\n  )[] {\n  _type == "externalLink" => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n  _type == "internalLink" => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n  _type == "nestedNavigation" => {\n  _key,\n  _type,\n  childLinks[] {\n    _type == "externalLink" => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    _type == "internalLink" => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n  },\n  link -> {\n    \'documentType\': _type,\n    \'slug\': coalesce(\n      slug,\n      store.slug\n    ) {\n      _type,\n      current\n    },\n  },\n  name,\n},\n},\n  padding,\n  showSeparatorLine,\n  sticky \n}': HEADER_FRAGMENTResult;
    '{\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n}': FONT_ASSET_FRAGMENTResult;
    '{\n  baseSize,\n  capitalize,\n  font[] {\n    antialiased,\n    fontAssets[] {\n      "fontName": ^.fontName,\n      fontStyle,\n      fontWeight,\n      ttf {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n      woff {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n      woff2 {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n    },\n    fontName,\n    fontType,\n  },\n  letterSpacing,\n  lineHeight,\n}': FONT_FRAGMENTResult;
    "{\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n}": RICHTEXT_FRAGMENTResult;
    "{\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n}": LINK_REFERENCE_FRAGMENTResult;
    "{\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n}": INTERNAL_LINK_FRAGMENTResult;
    '{\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n}': EXTERNAL_LINK_FRAGMENTResult;
    "{\n  _key,\n  _type,\n  childLinks[] {\n    _type == \"externalLink\" => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    _type == \"internalLink\" => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n  },\n  link -> {\n    'documentType': _type,\n    'slug': coalesce(\n      slug,\n      store.slug\n    ) {\n      _type,\n      current\n    },\n  },\n  name,\n}": NESTED_NAVIGATION_FRAGMENTResult;
    "{\n  _type == \"externalLink\" => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n  _type == \"internalLink\" => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n  _type == \"nestedNavigation\" => {\n  _key,\n  _type,\n  childLinks[] {\n    _type == \"externalLink\" => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    _type == \"internalLink\" => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n  },\n  link -> {\n    'documentType': _type,\n    'slug': coalesce(\n      slug,\n      store.slug\n    ) {\n      _type,\n      current\n    },\n  },\n  name,\n},\n}": LINKS_LIST_SELECTIONResult;
    "*[_type == 'productTemplate' && default == true][0] {\n    _type,\n    name,\n    sections[] {\n      _key,\n      _type,\n      \n    _type == 'richtextSection' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'carouselSection' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionListSection' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredProductSection' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredCollectionSection' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == 'imageBannerSection' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n      \n    _type == 'productInformationSection' => {\n  _key,\n  _type,\n  desktopMediaPosition,\n  desktopMediaWidth,\n  mediaAspectRatio,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'relatedProductsSection' => {\n  _key,\n  _type,\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n    },\n  }": DEFAULT_PRODUCT_TEMPLATEResult;
    "*[_type == 'collectionTemplate' && default == true][0] {\n    _type,\n    name,\n    sections[] {\n      _key,\n      _type,\n      \n    _type == 'richtextSection' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'carouselSection' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionListSection' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredProductSection' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredCollectionSection' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == 'imageBannerSection' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n      \n    _type == 'collectionBannerSection' => {\n  _key,\n  _type,\n  bannerHeight,\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  showDescription,\n  showImage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionProductGridSection' => {\n  _key,\n  _type,\n  desktopColumns,\n  enableFiltering,\n  enableSorting,\n  mobileColumns,\n  productsPerPage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n    },\n  }": DEFAULT_COLLECTION_TEMPLATEResult;
    '{\n  \'_type\': \'root\',\n  "defaultColorScheme": *[_type == "colorScheme" && default == true][0] {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  "fonts": *[_type == "typography"][0] {\n    body {\n  baseSize,\n  capitalize,\n  font[] {\n    antialiased,\n    fontAssets[] {\n      "fontName": ^.fontName,\n      fontStyle,\n      fontWeight,\n      ttf {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n      woff {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n      woff2 {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n    },\n    fontName,\n    fontType,\n  },\n  letterSpacing,\n  lineHeight,\n},\n    heading {\n  baseSize,\n  capitalize,\n  font[] {\n    antialiased,\n    fontAssets[] {\n      "fontName": ^.fontName,\n      fontStyle,\n      fontWeight,\n      ttf {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n      woff {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n      woff2 {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n    },\n    fontName,\n    fontType,\n  },\n  letterSpacing,\n  lineHeight,\n},\n    extra {\n  baseSize,\n  capitalize,\n  font[] {\n    antialiased,\n    fontAssets[] {\n      "fontName": ^.fontName,\n      fontStyle,\n      fontWeight,\n      ttf {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n      woff {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n      woff2 {\n  "extension": asset -> extension,\n  "mimeType": asset -> mimeType,\n  "url": asset -> url,\n},\n    },\n    fontName,\n    fontType,\n  },\n  letterSpacing,\n  lineHeight,\n},\n  },\n  "footer": *[_type == \'footer\'][0] {\n    "footer": footers[0] {\n      _key,\n      _type,\n      \n    _type == \'socialLinksOnly\' => {\n  _key,\n  _type,\n  "copyright": coalesce(\n    copyright[_key == $language][0].value,\n    copyright[_key == $defaultLanguage][0].value,\n  ),\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n},\n  \n    },\n    sections[] {\n      _key,\n      _type,\n      \n    _type == \'richtextSection\' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  "richtext": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == \'image\' => {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == \'button\' => {\n    ...,\n    link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == \'block\' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == \'internalLink\' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == \'externalLink\' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == \'image\' => {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == \'button\' => {\n    ...,\n    link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == \'block\' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == \'internalLink\' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == \'externalLink\' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == \'carouselSection\' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  "title": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == \'collectionListSection\' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == \'featuredProductSection\' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      "firstVariant": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  \'richtext\': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == \'image\' => {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == \'button\' => {\n    ...,\n    link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == \'block\' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == \'internalLink\' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == \'externalLink\' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == \'image\' => {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == \'button\' => {\n    ...,\n    link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == \'block\' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == \'internalLink\' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == \'externalLink\' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == \'featuredCollectionSection\' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  "heading": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == \'imageBannerSection\' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  "content": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == \'image\' => {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == \'button\' => {\n    ...,\n    link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == \'block\' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == \'internalLink\' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == \'externalLink\' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == \'image\' => {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == \'button\' => {\n    ...,\n    link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == \'block\' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == \'internalLink\' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == \'externalLink\' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n    },\n  },\n  "header": *[_type == "header"][0] {\n  "announcementBar": coalesce(\n    announcementBar[_key == $language][0].value[],\n    announcementBar[_key == $defaultLanguage][0].value[],\n  )[] {\n    _type == "announcement" => {\n      _key,\n      externalLink,\n      link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n      openInNewTab,\n      text,\n    },\n  },\n  announcementBarColorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  autoRotateAnnouncements,\n  blur,\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  desktopLogoWidth,\n  "menu": coalesce(\n    menu[_key == $language][0].value[],\n    menu[_key == $defaultLanguage][0].value[],\n  )[] {\n  _type == "externalLink" => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n  _type == "internalLink" => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n  _type == "nestedNavigation" => {\n  _key,\n  _type,\n  childLinks[] {\n    _type == "externalLink" => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    _type == "internalLink" => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  \'documentType\': _type,\n  \'slug\': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n  },\n  link -> {\n    \'documentType\': _type,\n    \'slug\': coalesce(\n      slug,\n      store.slug\n    ) {\n      _type,\n      current\n    },\n  },\n  name,\n},\n},\n  padding,\n  showSeparatorLine,\n  sticky \n},\n  "settings": *[_type == "settings"][0] {\n  badgesCornerRadius,\n  badgesPosition,\n  badgesSaleColorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  badgesSoldOutColorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  blogCards,\n  buttonsBorder,\n  buttonsShadow,\n  cartCollection -> {\n    store {\n      gid,\n      title,\n    },\n  },\n  cartColorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  collectionCards,\n  description,\n  dropdownsAndPopupsBorder,\n  dropdownsAndPopupsShadow,\n  facebook,\n  favicon {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  grid,\n  inputsBorder,\n  inputsShadow,\n  instagram,\n  linkedin,\n  logo {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  mediaBorder,\n  mediaShadow,\n  pinterest,\n  productCards,\n  showCurrencyCodes,\n  showTrailingZeros,\n  siteName,\n  snapchat,\n  socialSharingImagePreview {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  spaceBetweenTemplateSections,\n  tiktok,\n  tumblr,\n  twitter,\n  vimeo,\n  youtube,\n},\n  "themeContent": *[_type == "themeContent"][0] {\n  account {\n    "accountDetails": coalesce(\n    accountDetails[_key == $language][0].value,\n    accountDetails[_key == $defaultLanguage][0].value,\n  ),\n    "addAddress": coalesce(\n    addAddress[_key == $language][0].value,\n    addAddress[_key == $defaultLanguage][0].value,\n  ),\n    "addName": coalesce(\n    addName[_key == $language][0].value,\n    addName[_key == $defaultLanguage][0].value,\n  ),\n    "addressBook": coalesce(\n    addressBook[_key == $language][0].value,\n    addressBook[_key == $defaultLanguage][0].value,\n  ),\n    "addressLine1": coalesce(\n    addressLine1[_key == $language][0].value,\n    addressLine1[_key == $defaultLanguage][0].value,\n  ),\n    "addressLine2": coalesce(\n    addressLine2[_key == $language][0].value,\n    addressLine2[_key == $defaultLanguage][0].value,\n  ),\n    "cancel": coalesce(\n    cancel[_key == $language][0].value,\n    cancel[_key == $defaultLanguage][0].value,\n  ),\n    "city": coalesce(\n    city[_key == $language][0].value,\n    city[_key == $defaultLanguage][0].value,\n  ), \n    "company": coalesce(\n    company[_key == $language][0].value,\n    company[_key == $defaultLanguage][0].value,\n  ),\n    "country": coalesce(\n    country[_key == $language][0].value,\n    country[_key == $defaultLanguage][0].value,\n  ),\n    "default": coalesce(\n    default[_key == $language][0].value,\n    default[_key == $defaultLanguage][0].value,\n  ),\n    "defaultAddress": coalesce(\n    defaultAddress[_key == $language][0].value,\n    defaultAddress[_key == $defaultLanguage][0].value,\n  ),\n    "discounts": coalesce(\n    discounts[_key == $language][0].value,\n    discounts[_key == $defaultLanguage][0].value,\n  ),\n    "discountsOff": coalesce(\n    discountsOff[_key == $language][0].value,\n    discountsOff[_key == $defaultLanguage][0].value,\n  ),\n    "edit": coalesce(\n    edit[_key == $language][0].value,\n    edit[_key == $defaultLanguage][0].value,\n  ),\n    "editAddress": coalesce(\n    editAddress[_key == $language][0].value,\n    editAddress[_key == $defaultLanguage][0].value,\n  ),\n    "emailAddress": coalesce(\n    emailAddress[_key == $language][0].value,\n    emailAddress[_key == $defaultLanguage][0].value,\n  ),\n    "firstName": coalesce(\n    firstName[_key == $language][0].value,\n    firstName[_key == $defaultLanguage][0].value,\n  ),\n    "fulfillmentStatus": coalesce(\n    fulfillmentStatus[_key == $language][0].value,\n    fulfillmentStatus[_key == $defaultLanguage][0].value,\n  ),\n    "lastName": coalesce(\n    lastName[_key == $language][0].value,\n    lastName[_key == $defaultLanguage][0].value,\n  ),\n    "name": coalesce(\n    name[_key == $language][0].value,\n    name[_key == $defaultLanguage][0].value,\n  ),\n    "noAddress": coalesce(\n    noAddress[_key == $language][0].value,\n    noAddress[_key == $defaultLanguage][0].value,\n  ),\n    "noOrdersMessage": coalesce(\n    noOrdersMessage[_key == $language][0].value,\n    noOrdersMessage[_key == $defaultLanguage][0].value,\n  ),\n    "noShippingAddress": coalesce(\n    noShippingAddress[_key == $language][0].value,\n    noShippingAddress[_key == $defaultLanguage][0].value,\n  ),\n    "orderDate": coalesce(\n    orderDate[_key == $language][0].value,\n    orderDate[_key == $defaultLanguage][0].value,\n  ),\n    "orderDetail": coalesce(\n    orderDetail[_key == $language][0].value,\n    orderDetail[_key == $defaultLanguage][0].value,\n  ),\n    "orderHistory": coalesce(\n    orderHistory[_key == $language][0].value,\n    orderHistory[_key == $defaultLanguage][0].value,\n  ),\n    "orderId": coalesce(\n    orderId[_key == $language][0].value,\n    orderId[_key == $defaultLanguage][0].value,\n  ),\n    "orderNumber": coalesce(\n    orderNumber[_key == $language][0].value,\n    orderNumber[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusCancelled": coalesce(\n    orderStatusCancelled[_key == $language][0].value,\n    orderStatusCancelled[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusError": coalesce(\n    orderStatusError[_key == $language][0].value,\n    orderStatusError[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusFailure": coalesce(\n    orderStatusFailure[_key == $language][0].value,\n    orderStatusFailure[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusOpen": coalesce(\n    orderStatusOpen[_key == $language][0].value,\n    orderStatusOpen[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusPending": coalesce(\n    orderStatusPending[_key == $language][0].value,\n    orderStatusPending[_key == $defaultLanguage][0].value,\n  ),\n    "orderStatusSuccess": coalesce(\n    orderStatusSuccess[_key == $language][0].value,\n    orderStatusSuccess[_key == $defaultLanguage][0].value,\n  ),\n    "phone": coalesce(\n    phone[_key == $language][0].value,\n    phone[_key == $defaultLanguage][0].value,\n  ),\n    "phoneNumber": coalesce(\n    phoneNumber[_key == $language][0].value,\n    phoneNumber[_key == $defaultLanguage][0].value,\n  ),\n    "placedOn": coalesce(\n    placedOn[_key == $language][0].value,\n    placedOn[_key == $defaultLanguage][0].value,\n  ),\n    "postalCode": coalesce(\n    postalCode[_key == $language][0].value,\n    postalCode[_key == $defaultLanguage][0].value,\n  ),\n    "price": coalesce(\n    price[_key == $language][0].value,\n    price[_key == $defaultLanguage][0].value,\n  ),\n    "product": coalesce(\n    product[_key == $language][0].value,\n    product[_key == $defaultLanguage][0].value,\n  ),\n    "profile": coalesce(\n    profile[_key == $language][0].value,\n    profile[_key == $defaultLanguage][0].value,\n  ),\n    "quantity": coalesce(\n    quantity[_key == $language][0].value,\n    quantity[_key == $defaultLanguage][0].value,\n  ),\n    "remove": coalesce(\n    remove[_key == $language][0].value,\n    remove[_key == $defaultLanguage][0].value,\n  ),\n    "returnToAccount": coalesce(\n    returnToAccount[_key == $language][0].value,\n    returnToAccount[_key == $defaultLanguage][0].value,\n  ),\n    "save": coalesce(\n    save[_key == $language][0].value,\n    save[_key == $defaultLanguage][0].value,\n  ),\n    "saving": coalesce(\n    saving[_key == $language][0].value,\n    saving[_key == $defaultLanguage][0].value,\n  ),\n    "shippingAddress": coalesce(\n    shippingAddress[_key == $language][0].value,\n    shippingAddress[_key == $defaultLanguage][0].value,\n  ),\n    "signOut": coalesce(\n    signOut[_key == $language][0].value,\n    signOut[_key == $defaultLanguage][0].value,\n  ),\n    "startShopping": coalesce(\n    startShopping[_key == $language][0].value,\n    startShopping[_key == $defaultLanguage][0].value,\n  ),\n    "stateProvince": coalesce(\n    stateProvince[_key == $language][0].value,\n    stateProvince[_key == $defaultLanguage][0].value,\n  ),\n    "status": coalesce(\n    status[_key == $language][0].value,\n    status[_key == $defaultLanguage][0].value,\n  ),\n    "subtotal": coalesce(\n    subtotal[_key == $language][0].value,\n    subtotal[_key == $defaultLanguage][0].value,\n  ),\n    "tax": coalesce(\n    tax[_key == $language][0].value,\n    tax[_key == $defaultLanguage][0].value,\n  ),\n    "total": coalesce(\n    total[_key == $language][0].value,\n    total[_key == $defaultLanguage][0].value,\n  ),\n    "updateYourProfile": coalesce(\n    updateYourProfile[_key == $language][0].value,\n    updateYourProfile[_key == $defaultLanguage][0].value,\n  ),\n    "viewDetails": coalesce(\n    viewDetails[_key == $language][0].value,\n    viewDetails[_key == $defaultLanguage][0].value,\n  ),\n    "welcome": coalesce(\n    welcome[_key == $language][0].value,\n    welcome[_key == $defaultLanguage][0].value,\n  ),\n    "welcomeToYourAccount": coalesce(\n    welcomeToYourAccount[_key == $language][0].value,\n    welcomeToYourAccount[_key == $defaultLanguage][0].value,\n  ),\n  },\n  cart {\n    "applyDiscount": coalesce(\n    applyDiscount[_key == $language][0].value,\n    applyDiscount[_key == $defaultLanguage][0].value,\n  ),\n    "continueShopping": coalesce(\n    continueShopping[_key == $language][0].value,\n    continueShopping[_key == $defaultLanguage][0].value,\n  ),\n    "discountCode": coalesce(\n    discountCode[_key == $language][0].value,\n    discountCode[_key == $defaultLanguage][0].value,\n  ),\n    "discounts": coalesce(\n    discounts[_key == $language][0].value,\n    discounts[_key == $defaultLanguage][0].value,\n  ),\n    "emptyMessage": coalesce(\n    emptyMessage[_key == $language][0].value,\n    emptyMessage[_key == $defaultLanguage][0].value,\n  ),\n    "heading": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n    "orderSummary": coalesce(\n    orderSummary[_key == $language][0].value,\n    orderSummary[_key == $defaultLanguage][0].value,\n  ),\n    "proceedToCheckout": coalesce(\n    proceedToCheckout[_key == $language][0].value,\n    proceedToCheckout[_key == $defaultLanguage][0].value,\n  ),\n    "quantity": coalesce(\n    quantity[_key == $language][0].value,\n    quantity[_key == $defaultLanguage][0].value,\n  ),\n    "remove": coalesce(\n    remove[_key == $language][0].value,\n    remove[_key == $defaultLanguage][0].value,\n  ),\n    "subtotal": coalesce(\n    subtotal[_key == $language][0].value,\n    subtotal[_key == $defaultLanguage][0].value,\n  ),\n  },\n  collection {\n    "apply": coalesce(\n    apply[_key == $language][0].value,\n    apply[_key == $defaultLanguage][0].value,\n  ),\n    "clear": coalesce(\n    clear[_key == $language][0].value,\n    clear[_key == $defaultLanguage][0].value,\n  ),\n    "clearFilters": coalesce(\n    clearFilters[_key == $language][0].value,\n    clearFilters[_key == $defaultLanguage][0].value,\n  ),\n    "filterAndSort": coalesce(\n    filterAndSort[_key == $language][0].value,\n    filterAndSort[_key == $defaultLanguage][0].value,\n  ),\n    "filterInStock": coalesce(\n    filterInStock[_key == $language][0].value,\n    filterInStock[_key == $defaultLanguage][0].value,\n  ),\n    "filterOutOfStock": coalesce(\n    filterOutOfStock[_key == $language][0].value,\n    filterOutOfStock[_key == $defaultLanguage][0].value,\n  ),\n    "from": coalesce(\n    from[_key == $language][0].value,\n    from[_key == $defaultLanguage][0].value,\n  ),\n    "loading": coalesce(\n    loading[_key == $language][0].value,\n    loading[_key == $defaultLanguage][0].value,\n  ),\n    "loadMoreProducts": coalesce(\n    loadMoreProducts[_key == $language][0].value,\n    loadMoreProducts[_key == $defaultLanguage][0].value,\n  ),\n    "loadPrevious": coalesce(\n    loadPrevious[_key == $language][0].value,\n    loadPrevious[_key == $defaultLanguage][0].value,\n  ),\n    "noCollectionFound": coalesce(\n    noCollectionFound[_key == $language][0].value,\n    noCollectionFound[_key == $defaultLanguage][0].value,\n  ),\n    "noProductFound": coalesce(\n    noProductFound[_key == $language][0].value,\n    noProductFound[_key == $defaultLanguage][0].value,\n  ),\n    "sortBestSelling": coalesce(\n    sortBestSelling[_key == $language][0].value,\n    sortBestSelling[_key == $defaultLanguage][0].value,\n  ),\n    "sortBy": coalesce(\n    sortBy[_key == $language][0].value,\n    sortBy[_key == $defaultLanguage][0].value,\n  ),\n    "sortFeatured": coalesce(\n    sortFeatured[_key == $language][0].value,\n    sortFeatured[_key == $defaultLanguage][0].value,\n  ),\n    "sortHighLow": coalesce(\n    sortHighLow[_key == $language][0].value,\n    sortHighLow[_key == $defaultLanguage][0].value,\n  ),\n    "sortLowHigh": coalesce(\n    sortLowHigh[_key == $language][0].value,\n    sortLowHigh[_key == $defaultLanguage][0].value,\n  ),\n    "sortNewest": coalesce(\n    sortNewest[_key == $language][0].value,\n    sortNewest[_key == $defaultLanguage][0].value,\n  ),\n    "to": coalesce(\n    to[_key == $language][0].value,\n    to[_key == $defaultLanguage][0].value,\n  ), \n    "viewAll": coalesce(\n    viewAll[_key == $language][0].value,\n    viewAll[_key == $defaultLanguage][0].value,\n  ),\n  },\n  error {\n    "addressCreation": coalesce(\n    addressCreation[_key == $language][0].value,\n    addressCreation[_key == $defaultLanguage][0].value,\n  ),\n    "missingAddressId": coalesce(\n    missingAddressId[_key == $language][0].value,\n    missingAddressId[_key == $defaultLanguage][0].value,\n  ),\n    "pageNotFound": coalesce(\n    pageNotFound[_key == $language][0].value,\n    pageNotFound[_key == $defaultLanguage][0].value,\n  ),\n    "reloadPage": coalesce(\n    reloadPage[_key == $language][0].value,\n    reloadPage[_key == $defaultLanguage][0].value,\n  ),\n    "sectionError": coalesce(\n    sectionError[_key == $language][0].value,\n    sectionError[_key == $defaultLanguage][0].value,\n  ),\n    "serverError": coalesce(\n    serverError[_key == $language][0].value,\n    serverError[_key == $defaultLanguage][0].value,\n  ),\n  },\n  product {\n    "addToCart": coalesce(\n    addToCart[_key == $language][0].value,\n    addToCart[_key == $defaultLanguage][0].value,\n  ),\n    "quantitySelector": coalesce(\n    quantitySelector[_key == $language][0].value,\n    quantitySelector[_key == $defaultLanguage][0].value,\n  ),\n    "sale": coalesce(\n    sale[_key == $language][0].value,\n    sale[_key == $defaultLanguage][0].value,\n  ),\n    "soldOut": coalesce(\n    soldOut[_key == $language][0].value,\n    soldOut[_key == $defaultLanguage][0].value,\n  ),\n  },\n},\n}': ROOT_QUERYResult;
    "{\n  '_type': 'collection',\n  \"collection\": *[_type == \"collection\" && store.slug.current == $collectionHandle][0] {\n    store {\n      gid,\n    },\n    template -> {\n      sections[] {\n        _key,\n        _type,\n        \n    _type == 'richtextSection' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'carouselSection' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionListSection' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredProductSection' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredCollectionSection' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == 'imageBannerSection' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n        \n    _type == 'collectionBannerSection' => {\n  _key,\n  _type,\n  bannerHeight,\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  showDescription,\n  showImage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionProductGridSection' => {\n  _key,\n  _type,\n  desktopColumns,\n  enableFiltering,\n  enableSorting,\n  mobileColumns,\n  productsPerPage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n      },\n    },\n  },\n  \"defaultCollectionTemplate\": *[_type == 'collectionTemplate' && default == true][0] {\n    _type,\n    name,\n    sections[] {\n      _key,\n      _type,\n      \n    _type == 'richtextSection' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'carouselSection' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionListSection' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredProductSection' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredCollectionSection' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == 'imageBannerSection' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n      \n    _type == 'collectionBannerSection' => {\n  _key,\n  _type,\n  bannerHeight,\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  showDescription,\n  showImage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionProductGridSection' => {\n  _key,\n  _type,\n  desktopColumns,\n  enableFiltering,\n  enableSorting,\n  mobileColumns,\n  productsPerPage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n    },\n  },\n}": COLLECTION_QUERYResult;
    "*[(_type == \"page\" && ($handle != \"home\" && slug.current == $handle)) || (\n    _type == \"home\" && $handle == \"home\"\n  )][0] {\n    _type,\n    sections[] {\n      _key,\n      _type,\n      \n    _type == 'richtextSection' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'carouselSection' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionListSection' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredProductSection' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredCollectionSection' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == 'imageBannerSection' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n    },\n    seo {\n      \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n      \"description\": coalesce(\n    description[_key == $language][0].value,\n    description[_key == $defaultLanguage][0].value,\n  ),\n      image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n    },\n  }": PAGE_QUERYResult;
    "{\n  \"_type\": \"product\",\n  'product': *[_type == \"product\" && store.slug.current == $productHandle][0] {\n    store {\n      gid,\n    },\n    template -> {\n      sections[] {\n        _key,\n        _type,\n        \n    _type == 'richtextSection' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'carouselSection' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionListSection' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredProductSection' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredCollectionSection' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == 'imageBannerSection' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n        \n    _type == 'productInformationSection' => {\n  _key,\n  _type,\n  desktopMediaPosition,\n  desktopMediaWidth,\n  mediaAspectRatio,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'relatedProductsSection' => {\n  _key,\n  _type,\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n      },\n    },\n  },\n  \"defaultProductTemplate\": *[_type == 'productTemplate' && default == true][0] {\n    _type,\n    name,\n    sections[] {\n      _key,\n      _type,\n      \n    _type == 'richtextSection' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'carouselSection' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionListSection' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredProductSection' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredCollectionSection' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == 'imageBannerSection' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n      \n    _type == 'productInformationSection' => {\n  _key,\n  _type,\n  desktopMediaPosition,\n  desktopMediaWidth,\n  mediaAspectRatio,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'relatedProductsSection' => {\n  _key,\n  _type,\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n    },\n  },\n}": PRODUCT_QUERYResult;
    "*[][0] {\n  sections[] {\n    _key,\n    _type,\n    \n    _type == 'richtextSection' => {\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'carouselSection' => {\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  \"title\": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionListSection' => {\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredProductSection' => {\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'featuredCollectionSection' => {\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n},\n    _type == 'imageBannerSection' => {\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n    \n    _type == 'productInformationSection' => {\n  _key,\n  _type,\n  desktopMediaPosition,\n  desktopMediaWidth,\n  mediaAspectRatio,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'relatedProductsSection' => {\n  _key,\n  _type,\n  desktopColumns,\n  \"heading\": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n    \n    _type == 'collectionBannerSection' => {\n  _key,\n  _type,\n  bannerHeight,\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  showDescription,\n  showImage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n    _type == 'collectionProductGridSection' => {\n  _key,\n  _type,\n  desktopColumns,\n  enableFiltering,\n  enableSorting,\n  mobileColumns,\n  productsPerPage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n},\n  \n  },\n  footers[] {\n    _key,\n    _type,\n    \n    _type == 'socialLinksOnly' => {\n  _key,\n  _type,\n  \"copyright\": coalesce(\n    copyright[_key == $language][0].value,\n    copyright[_key == $defaultLanguage][0].value,\n  ),\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n},\n  \n  },\n}": ALL_SECTIONS_QUERYResult;
    '{\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}': SECTION_SETTINGS_FRAGMENTResult;
    '{\n  _key,\n  _type,\n  desktopColumns,\n  "heading": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}': RELATED_PRODUCTS_SECTION_FRAGMENTResult;
    "{\n  _key,\n  _type,\n  desktopMediaPosition,\n  desktopMediaWidth,\n  mediaAspectRatio,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}": PRODUCT_INFORMATION_SECTION_FRAGMENTResult;
    '{\n  _key,\n  _type,\n  desktopColumns,\n  enableFiltering,\n  enableSorting,\n  mobileColumns,\n  productsPerPage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}': COLLECTION_PRODUCT_GRID_SECTION_FRAGMENTResult;
    '{\n  _key,\n  _type,\n  bannerHeight,\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  showDescription,\n  showImage,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}': COLLECTION_BANNER_SECTION_FRAGMENTResult;
    "{\n  _key,\n  _type,\n  contentAlignment,\n  desktopContentPosition,\n  maxWidth,\n  \"richtext\": coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}": RICHTEXT_SECTION_FRAGMENTResult;
    '{\n  _key,\n  _type,\n  arrows,\n  autoplay,\n  "title": coalesce(\n    title[_key == $language][0].value,\n    title[_key == $defaultLanguage][0].value,\n  ),\n  loop,\n  pagination,\n  slides[] {\n    _key,\n    image {\n  _type,\n  asset,\n  "altText": asset -> altText,\n  "_ref": asset._ref,\n  hotspot,\n  crop,\n},\n  },\n  slidesPerViewDesktop,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}': CAROUSEL_SECTION_FRAGMENTResult;
    '{\n  _key,\n  _type,\n  collections[] -> {\n    store {\n      gid\n    }\n  },\n  desktopColumns,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}': COLLECTION_LIST_SECTION_FRAGMENTResult;
    "{\n  _key,\n  _type,\n  mediaAspectRatio,\n  product -> {\n    store {\n      descriptionHtml,\n      \"firstVariant\": variants[0] -> {\n        store {\n          gid,\n          previewImageUrl,\n          price\n        }\n      },\n      gid,\n      options[] {\n        name,\n        values\n      },\n      previewImageUrl,\n      title\n    }\n  },\n  'richtext': coalesce(\n    richtext[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    richtext[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}": FEATURED_PRODUCT_SECTION_FRAGMENTResult;
    '{\n  _key,\n  _type,\n  collection -> {\n    store {\n      gid,\n      slug,\n      title\n    }\n  },\n  desktopColumns,\n  "heading": coalesce(\n    heading[_key == $language][0].value,\n    heading[_key == $defaultLanguage][0].value,\n  ),\n  maxProducts,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n},\n  viewAll\n}': FEATURED_COLLECTION_SECTION_FRAGMENTResult;
    "{\n  _key,\n  _type,\n  backgroundImage {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  bannerHeight,\n  \"content\": coalesce(\n    content[_key == $language][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n    content[_key == $defaultLanguage][0].value[] {\n  ...,\n  _type == 'image' => {\n  _type,\n  asset,\n  \"altText\": asset -> altText,\n  \"_ref\": asset._ref,\n  hotspot,\n  crop,\n},\n  _type == 'button' => {\n    ...,\n    link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  },\n  _type == 'block' => {\n    ...,\n    markDefs[] {\n      ...,\n      _type == 'internalLink' => {\n  _key,\n  _type,\n  anchor,\n  link -> {\n  'documentType': _type,\n  'slug': coalesce(\n    slug,\n    store.slug\n  ) {\n    _type,\n    current\n  },\n},\n  name,\n},\n      _type == 'externalLink' => {\n  _key,\n  _type,\n  link,\n  name,\n  openInNewTab,\n},\n    }\n  }\n},\n  )[],\n  contentAlignment,\n  contentPosition,\n  overlayOpacity,\n  settings {\n  colorScheme -> {\n  background {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  border {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  card {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  cardForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  foreground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primary {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n  primaryForeground {\n  alpha,\n  hex,\n  hsl,\n  rgb,\n},\n},\n  customCss,\n  hide,\n  padding\n}\n}": IMAGE_BANNER_SECTION_FRAGMENTResult;
  }
}
